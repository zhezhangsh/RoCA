layout(matrix(1:2, nrow=1), width=c(3,1));
par(mai=c(1,1,.25,.25));
cx <- max(0.5, min(4, 100/length(X)))
plot(X, Y, col=col1, pch=19, cex=cx, xlim=c(min(X)*1.1, max(X)*1.1),
ylim=c(min(Y)*1.1, max(Y)*1.1), xlab=paste('PC1', ', ', per[1], '%', sep=''),
ylab=paste('PC2', ', ', per[2], '%', sep=''), cex.lab=2);
text(X, Y, label=1:length(X), col='white', cex=.3*cx);
par(mai=c(1, 0, 0.25, 0));
plot(0, type='n', xlim=c(0, 100), ylim=c(1, 100), axes=FALSE, bty='n', xaxs='i', yaxs='i', xlab='', ylab='');
w   <- strwidth(1:length(X), cex=1.2);
w0  <- 1.2*80/max(w, 80);
h0  <- 1.2*(100/length(X))/4.0;
cex <- min(1.2, w0, h0);
points(rep(5, length(X)), 100-(1:length(X))*4.0*cex, col=col1, pch=19, cex=2.5*cex);
text(5+cex*5, 100-(1:length(X))*4.0*cex, labels=colnames(cnt2), adj=0, col=col1, pch=19, cex=1*cex);
text(rep(5, length(labels)), 100-(1:length(X))*4.0*cex, labels=1:length(X), col='white', cex=0.8*cex);
pca;
}
pca <- drawPCA(rlg0[gns, , drop=FALSE]);
tbl <- list(Summary=t(pca$importance), PCs=pca$x, Loading=pca$rotation);
saveRDS(tbl, paste0(path.r, '/pca.rds'));
if (length(cnd) == 1) ln <- '' else {
pdf(paste0(path.fig, '/pca_adjusted.pdf'), w=9.6, h=7.2);
pca2 <- drawPCA(adj0[gns, , drop=FALSE]);
try(dev.off());
tbl <- list(Summary=t(pca2$importance), PCs=pca2$x, Loading=pca2$rotation);
saveRDS(tbl, paste0(path.r, '/pca_adjusted.rds'));
ln <- paste0('  - [PC analysis](figure/heatmap_adjusted.pdf) after adjusting data for ', paste(cnd[-1], collapse=' + '), '.')
}
par(mai=c(0.6, 0.9, 0.4, 0.1), mfrow=c(2,2));
# M-A Plot
title <- 'A. M-A Plot';
x <- rowMeans(cnt2[, s0])/2 + rowMeans(cnt2[, s1])/2;
y <- stat[, 4];
x[x<1/3] <- 1/3;
x <- log10(x);
dens <- density(x);
xlim <- c(log10(1/3), dens$x[max(which(dens$y>=0.001))]);
ylim <- c(-max(y), max(y));
plot(x, y, main=title, pch=19, col='#2471A3',  cex=.25, xlab='', ylab='', cex.axis=.75, xaxt='n', xlim=xlim, ylim=ylim);
abline(h=0, lwd=1, col=1);
lines(lowess(y ~ x), lwd=2, col='#FF4444');
axis(1, at=0:10, label=10^(0:10));
axis(1, at=log10(1/3), label=0);
ylab <- "Log2(fold change)";
xlab <- "Average read count";
title(xlab = xlab, ylab = ylab, line = 1.6, cex.lab = 1);
# Volcano Plot
title <- 'B. Volcano Plot';
x <- stat[,'AdjFC'];
p <- stat[,'Pvalue'];
y <- -1*log10(p);
y[y==Inf] <- max(y[y<Inf]) + 1;
z <- sqrt(abs(x*y));
cx <- z/(max(z));
xlim <- c(-max(abs(x)), max(abs(x)));
ylim <- min(10, ceiling(max(y)));
xlab <- paste('Log2(', g1, '/', g0, ')', sep='');
plot(x, y, main=title, pch=19, col='#CB4335',  cex=0.8*cx,
xlab='', ylab='', cex.axis=.75, ylim=c(0, 1.1*ylim), yaxs='i', xlim=xlim, yaxt='n');
title(xlab=xlab, ylab='P value', line=1.6, cex.lab=1);
axis(2, at=0:ylim, labels=10^(-1*(0:ylim)), las=2, cex.axis=0.5);
abline(h=-1*log10(0.01), v=c(-1,1), col='#2E86C1', lty=2);
box();
# P Value Distribution
title <- 'C. P Value Distribution';
hist(p[p<1], br=seq(0, 1, 0.01), cex.axis=.75, main=title, col='#D68910', xaxs='i', yaxs='i', xlab='', ylab='');
title(xlab='P value', ylab='Count', line=1.6, cex.lab=1);
box();
# FDR
title <- 'D. False Discovery Rate';
q <- round(stat[, 'FDR'], 2);
n <- sapply(seq(min(q), 1, 0.01), function(x) length(q[q<=x]));
xlim <- 0.01*c(1, 100);
ylim <- c(1, nrow(cnt1));
plot(1, type='n', log='y', xlab='', ylab='', cex.axis=.75, xlim=xlim, ylim=ylim, main=title, xaxs='i', yaxs='i');
abline(v=seq(0, 1, .05), lty=3, col=8);
lines(seq(min(q), 1, 0.01), n, lwd=2.5, col='#7D3C98');
title(xlab='FDR cutoff', ylab='Count', line=1.6, cex.lab=1);
box();
comp
cmp
prms$comparison
# axis(1, at=log10(1/3), label=0);
ylab <- paste0("Log2(", prms$comparison$group1, '/', prms$comparison$group0);
ylab
# axis(1, at=log10(1/3), label=0);
ylab <- paste0("Log2(", prms$comparison$group1, '/', prms$comparison$group0, ')');
ylab
par(mai=c(0.6, 0.9, 0.4, 0.1), mfrow=c(2,2));
# M-A Plot
title <- 'A. M-A Plot';
x <- rowMeans(rlg0[, s0])/2 + rowMeans(rlg0[, s1])/2;
par(mai=c(0.6, 0.9, 0.4, 0.1), mfrow=c(2,2));
# M-A Plot
title <- 'A. M-A Plot';
colnames(rlg0) <- sub('rlog_', '', colnames(rlg0));
x <- rowMeans(rlg0[, s0])/2 + rowMeans(rlg0[, s1])/2;
y <- stat[, 4];
x <- log10(2^x);
dens <- density(x);
xlim <- c(log10(1/3), dens$x[max(which(dens$y>=0.001))]);
ylim <- c(-max(y), max(y));
plot(x, y, main=title, pch=19, col='#2471A3',  cex=.25, xlab='', ylab='', cex.axis=.75, xaxt='n', xlim=xlim, ylim=ylim);
abline(h=0, lwd=1, col=1);
lines(lowess(y ~ x), lwd=2, col='#FF4444');
axis(1, at=-10:10, label=10^(-10:10));
# axis(1, at=log10(1/3), label=0);
ylab <- paste0("Log2(", prms$comparison$group1, '/', prms$comparison$group0, ')');
xlab <- "Rlog-transformed read count";
title(xlab = xlab, ylab = ylab, line = 1.6, cex.lab = 1);
# Volcano Plot
title <- 'B. Volcano Plot';
x <- stat[,'AdjFC'];
p <- stat[,'Pvalue'];
y <- -1*log10(p);
y[y==Inf] <- max(y[y<Inf]) + 1;
z <- sqrt(abs(x*y));
cx <- z/(max(z));
xlim <- c(-max(abs(x)), max(abs(x)));
ylim <- min(10, ceiling(max(y)));
xlab <- paste('Log2(', g1, '/', g0, ')', sep='');
plot(x, y, main=title, pch=19, col='#CB4335',  cex=0.8*cx,
xlab='', ylab='', cex.axis=.75, ylim=c(0, 1.1*ylim), yaxs='i', xlim=xlim, yaxt='n');
title(xlab=xlab, ylab='P value', line=1.6, cex.lab=1);
axis(2, at=0:ylim, labels=10^(-1*(0:ylim)), las=2, cex.axis=0.5);
abline(h=-1*log10(0.01), v=c(-1,1), col='#2E86C1', lty=2);
box();
# P Value Distribution
title <- 'C. P Value Distribution';
hist(p[p<1], br=seq(0, 1, 0.01), cex.axis=.75, main=title, col='#D68910', xaxs='i', yaxs='i', xlab='', ylab='');
title(xlab='P value', ylab='Count', line=1.6, cex.lab=1);
box();
# FDR
title <- 'D. False Discovery Rate';
q <- round(stat[, 'FDR'], 2);
n <- sapply(seq(min(q), 1, 0.01), function(x) length(q[q<=x]));
xlim <- 0.01*c(1, 100);
ylim <- c(1, nrow(cnt1));
plot(1, type='n', log='y', xlab='', ylab='', cex.axis=.75, xlim=xlim, ylim=ylim, main=title, xaxs='i', yaxs='i');
abline(v=seq(0, 1, .05), lty=3, col=8);
lines(seq(min(q), 1, 0.01), n, lwd=2.5, col='#7D3C98');
title(xlab='FDR cutoff', ylab='Count', line=1.6, cex.lab=1);
box();
z <- tolower(prms$top$rank[1]);
if (length(z) == 0) z <-'both';
if (z=='p') rnk <- -log10(stat[, 'Pvalue'])*sign(stat[,'AdjFC']) else
if (z=='fc') rnk <- stat[, 'AdjFC'] else
rnk <- sign(stat[,'AdjFC'])*sqrt(abs(log10(stat[, 'Pvalue'])*stat[, 'AdjFC']));
x  <- -rank(rnk);
y  <- rank(-rnk);
rk <- rep(NA, length(x));
rk[rnk>0] <- y[rnk>0];
rk[rnk<0] <- x[rnk<0];
names(rk) <- rownames(stat);
up <- stat[names(sort(rk[rk>0 & !is.na(rk)]))[1:max(1, prms$top$number)], , drop=FALSE];
dn <- stat[names(rev(sort(rk[rk<0 & !is.na(rk)]))[1:max(1, prms$top$number)]), , drop=FALSE];
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(rlg0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(adj0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch, yaxt='n',
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
axis(2, at=0:20, label=2^(0:20))
abline(h=0)
}
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(log10(2^rlg0[ind[i], c(s0, s1)]), las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(adj0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch, yaxt='n',
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
axis(2, at=-10:10, label=10^(-10:10))
abline(h=0)
}
i <- 1
rlg0[ind[1], ]
log10(2^rlg0[ind[i], c(s0, s1)])
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(log10(2^rlg0[ind[i], c(s0, s1)]), las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(log10(2^adj0[ind[i], c(s0, s1)]), las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch, yaxt='n',
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
axis(2, at=-10:10, label=10^(-10:10))
abline(h=0)
}
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(log10(2^rlg0[ind[i], c(s0, s1)]), las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(log10(2^adj0[ind[i], c(s0, s1)]), las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch, yaxt='n',
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
axis(2, at=-10:10, label=10^(-10:10))
abline(h=0)
}
# Plot heatmap of top genes
par(mfrow=c(1,1));
if (length(cnd) == 1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
goi <- rlg0[c(rownames(up), rownames(dn)), c(s0, s1), drop=FALSE];
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
goi <- adj0[c(rownames(up), rownames(dn)), c(s0, s1), drop=FALSE];
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
}
rownames(goi) <- ttl[rownames(goi)];
DegHeatmap(goi,  col=rep(col0[-1], c(length(s0), length(s1))), plot.new=FALSE);
if (length(cnd) == 1) {
rlg1 <- rlg0;
colnames(rlg1) <- sub('rlog_', '', colnames(rlg1));
} else {
rlg1 <- adj0;
colnames(rlg1) <- sub('adj_', '', colnames(rlg1));
}
fn.barplot <- sapply(names(ids), function(nm) {
pdf(nm, w=8, h=6);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(cnt2[ids[nm], c(s0, s1)], las=3, col=col, ylab='Normalized read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(rlg1[ids[nm], c(s0, s1)], las=3, col=col, ylab='Rlog-transformed read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1.2, 0.6, 0.2));
barplot(pctl[ids[nm], c(s0, s1)], las=3, col=col, ylab='Percentile (%)', ylim=c(0, 100), cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
dev.off();
nm;
});
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(rlg0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(adj0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
axis(2, at=-10:10, label=10^(-10:10))
abline(h=0)
}
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(rlg0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(adj0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed read count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
abline(h=0)
}
# DEGs
pctl <- apply(cnt2, 2, function(e) 100*rank(e)/length(e)); # percentile
path.deg1 <- paste(path.deg, deg.sub[1], sep='/');
path.deg2 <- paste(path.deg, deg.sub[2], sep='/');
path.deg1.bars <- paste(path.deg1, '/bars', sep='');
path.deg2.bars <- paste(path.deg2, '/bars', sep='');
if (!exists(path.deg1.bars)) dir.create(path.deg1.bars, showWarnings = FALSE, recursive = TRUE);
if (!exists(path.deg2.bars)) dir.create(path.deg2.bars, showWarnings = FALSE, recursive = TRUE);
ids <- c(up=rownames(up), dn=rownames(dn));
names(ids) <- paste(rep(c(path.deg1.bars, path.deg2.bars), c(nrow(up), nrow(dn))), '/', ids, '.pdf', sep='');
col <- rep(c('#16A085BB', '#E74C3CBB'), c(length(s0), length(s1)));
wid <- min(1.8, 8/max(nchar(colnames(cnt2[, c(s0, s1)]))));
if (length(cnd) == 1) {
rlg1 <- rlg0;
colnames(rlg1) <- sub('rlog_', '', colnames(rlg1));
} else {
rlg1 <- adj0;
colnames(rlg1) <- sub('adj_', '', colnames(rlg1));
}
fn.barplot <- sapply(names(ids), function(nm) {
pdf(nm, w=8, h=6);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(cnt2[ids[nm], c(s0, s1)], las=3, col=col, ylab='Normalized read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(rlg1[ids[nm], c(s0, s1)], las=3, col=col, ylab='Rlog-transformed read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1.2, 0.6, 0.2));
barplot(pctl[ids[nm], c(s0, s1)], las=3, col=col, ylab='Percentile (%)', ylim=c(0, 100), cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
dev.off();
nm;
});
up.tbl <- data.frame(anno[rownames(up), , drop=FALSE], up, stringsAsFactors=FALSE, check.names=FALSE);
up.url <- AddHref(rownames(up.tbl), paste0('https://www.ncbi.nlm.nih.gov/gene/?term=', rownames(up.tbl)));
up.fig <- AddHref('Figure', paste('bars/', rownames(up), '.pdf', sep=''));
up.tbl <- cbind(ID=up.url, up.tbl, Barplot=up.fig);
CreateDatatable(up.tbl, paste0(path.deg1, '/index.html'), rownames = FALSE)->x;
dn.tbl <- data.frame(anno[rownames(dn), , drop=FALSE], dn, stringsAsFactors=FALSE, check.names=FALSE);
dn.url <- AddHref(rownames(dn.tbl), paste0('https://www.ncbi.nlm.nih.gov/gene/?term=', rownames(dn.tbl)));
dn.fig <- AddHref('Figure', paste('bars/', rownames(dn), '.pdf', sep=''));
dn.tbl <- cbind(ID=dn.url, dn.tbl, Barplot=dn.fig);
CreateDatatable(dn.tbl, paste0(path.deg2, '/index.html'), rownames = FALSE)->x;
# All genes
stat.table <- data.frame(anno[rownames(stat), , drop=FALSE], stat, round(cnt2[, c(s0, s1), drop=FALSE], 2),
stringsAsFactors=FALSE, check.names=FALSE);
stat.formatted <- FormatNumeric(cbind(ID=rownames(stat.table), stat.table));
ind <- prms$anno$entrez;
if (ind >= 0) stat.formatted[, ind+1] <- AddHref(stat.formatted[, ind+1], UrlEntrezGene(stat.formatted[, ind+1]));
CreateDatatable(stat.formatted, fn = paste(path.deg, 'all_genes.html', sep='/'), rownames = FALSE);
deg <- list(sample=smpl, anno=anno, parameter=prms, count=list(original=cnt1, normalized=cnt2, rlog=rlg0, adjusted=adj0), pca=pca);
deg$stat <- stat;
deg$deg  <- list(up=up, down=dn);
saveRDS(deg, file=paste0(path.r, '/deg.rds'));
xls <- list(stat, up, dn);
xls <- lapply(xls, function(x)
data.frame(anno[rownames(x), ], x, cnt2[rownames(x), c(s0, s1)], stringsAsFactors=FALSE, check.names=FALSE));
xls <- lapply(xls, FormatNumeric);
names(xls) <- c('All genes', paste('Higher in', g1), paste('Lower in', g1));
# WriteExcel(xls, fileName = spaste0(path.deg, '/deg'));
### PCA
pca.table <- data.frame(t(pca$importance), pca$x, stringsAsFactors = FALSE, check.names = FALSE);
CreateDatatable(FormatNumeric(pca.table, 3), paste0(path.tbl, '/pca.html'));
CreateDatatable(FormatNumeric(pca$rotation, 6), paste0(path.tbl, '/pca_loading.html'));
xls <- list(PCs=pca.table, Loading=pca$rotation);
# WriteExcel(xls, fileName = pastes0(path.tbl, '/pca'));
### Zip
# fz1 <- paste0(path.deg, '/deg.zip');
# fz2 <- paste0(path.r, '/R.zip');
# fz3 <- paste0(path, '/result.zip');
# if (file.exists(fz1)) file.remove(fz1);
# if (file.exists(fz2)) file.remove(fz2);
# if (file.exists(fz3)) file.remove(fz3);
# zip(fz1, path.deg, zip = 'zip');
# zip(fz2, path.r, zip = 'zip');
# zip(fz3, path, zip = 'zip');
fn.barplot <- sapply(names(ids), function(nm) {
pdf(nm, w=8, h=6);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(cnt2[ids[nm], c(s0, s1)], las=3, col=col, ylab='Normalized read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1, 0.6, 0.2));
barplot(2^rlg1[ids[nm], c(s0, s1)], las=3, col=col, ylab='Rlog-transformed read count', cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
par(mai=c(1.2, 1.2, 0.6, 0.2));
barplot(pctl[ids[nm], c(s0, s1)], las=3, col=col, ylab='Percentile (%)', ylim=c(0, 100), cex.lab=2, cex.names=0.75*wid);
title(main=ttl[ids[nm]], cex.main=1);
dev.off();
nm;
});
# Plot top genes
par(mfrow=c(1,2), mai=c(0.8, 0.8, 0.5, 0.2));
ind <- c(rownames(up)[1], rownames(dn)[1]);
ttl <- rownames(anno);
aid <- unlist(prms$anno);
aid <- names(aid[aid>0]);
aid <- aid[aid %in% colnames(anno)];
if (length(aid) > 0) for (i in 1:length(aid)) ttl <- paste(ttl, anno[, aid[i]], sep=' - ');
names(ttl) <- rownames(anno);
cex <- min(1, min(0.5/max(strwidth(colnames(cnt2), unit='in'))));
col <- col1[c(s0, s1)];
nch <- max(nchar(ttl[ind]));
# for (i in 1:2) {
#   barplot(cnt2[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
#           cex.axis=.75, col=col, ylab='Normalized read count');
#   abline(h=0)
# }
for (i in 1:2) {
if (length(cnd)==1) {
colnames(rlg0) <- sub('^rlog_', '', colnames(rlg0));
barplot(2^rlg0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed count');
ln <- "Plotting data was normalized by Rlog.";
} else {
colnames(adj0) <- sub('^adj_', '', colnames(rlg0));
barplot(2^adj0[ind[i], c(s0, s1)], las=3, cex.names=cex, main=ttl[ind[i]], cex.main=25/nch,
cex.axis=.75, col=col, ylab='Rlog-transformed count');
ln <- paste0("Plotting data was normalized by Rlog, and then adjusted for **", paste(cnd[-1], collapse=' + '), '**');
};
abline(h=0)
}
CreateReport('deseq2_multivariate.yaml')
CreateReport('deseq2_multivariate.yaml')
CreateReport('deseq2_multivariate.yaml')
CreateReport('deseq2_multivariate.yaml')
CreateReport('deseq2_multivariate.yaml')
CreateReport('deseq2_multivariate.yaml')
