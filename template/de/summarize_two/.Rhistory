dim(d0)
fn.tbl<-lapply(names(cls), function(nm) {
cl<-cls[[nm]];
s<-TestGSE(cl, gid, gset[[2]])[[1]];
t<-gset[[1]][rownames(s), ];
t$Name<-AddHref(t$Name, t$URL);
t<-cbind(t[, 1:3], FormatNumeric(s));
f<-paste('CLUSTER/ORA_', nm, '.html', sep='');
CreateDatatable(t, paste(path, f, sep='/'), rownames=FALSE, caption=paste('Over-represented gene set in', nm));
c<-nrow(t);
names(c)<-f;
t<-do.call('cbind', lapply(stat, function(s) s[cl, c(1, 2, 4, 5, 6)]));
t<-FormatNumeric(t);
colnames(t)[c(3,4,5,8,9,10)]<-paste(colnames(t)[c(3,4,5,8,9,10)], rep(names(grp), each=3), sep='_');
t<-data.frame(anno[rownames(t), ], t, stringsAsFactors = FALSE);
CreateDatatable(t, paste(path.cl, '/', nm, '.html', sep=''), caption=nm);
c;
});
names(cls)
mm<-round(sapply(grps, function(x) rowMeans(ms[, x, drop=FALSE])), 4);
n<-as.vector(unlist(fn.tbl));
sz<-sapply(cls, length);
lnk<-paste('[', n, '](', sapply(fn.tbl, names), ')', sep='');
cl.tbl<-data.frame(Size=sz, mm, Gene_set=lnk, stringsAsFactors = FALSE);
cl.tbl[, 1]<-paste('[', sz, '](CLUSTER/', names(cls), '.html)', sep='');
cl.tbl<-cbind(ID=rownames(cl.tbl), cl.tbl);
cl.tbl[, 1]<-paste('[', cl.tbl[, 1], '](CLUSTER/Heatmap_', names(cls), '.pdf)', sep='');
dim(cl.tbl)
cl.tbl
`r kable(cl.tbl, row.names=FALSE, align='c')`
kable(cl.tbl, row.names=FALSE, align='c')
cl.tbl<-data.frame(Size=sz, mm, Gene_set=lnk, stringsAsFactors = FALSE);
cl.tbl[, 1]<-paste('[', sz, '](CLUSTER/', names(cls), '.html)', sep='');
cl.tbl<-cbind(ID=rownames(cl.tbl), cl.tbl);
cl.tbl
mm
cl.tbl<-data.frame(Size=sz, mm, Gene_set=lnk, stringsAsFactors = FALSE);
cl.tbl[, 1]<-paste('[', sz, '](CLUSTER/', names(cls), '.html)', sep='');
cl.tbl<-cbind(ID=rownames(cl.tbl), cl.tbl);
cl.tbl[, 1]<-paste('[', cl.tbl[, 1], '](CLUSTER/Heatmap_', names(cls), '.pdf)', sep='');
cl.tbl
mm<-round(sapply(grps, function(x) rowMeans(ms[, x, drop=FALSE])), 4);
mm
colnames(cl.tbl)
paste(rep(comp, each=2), unlist(grp), sep='::')
names(ora.s)
names(ora.s) <- paste(rep(comp, each=2), unlist(grp), sep='::');
names(ora.s)
gset.src
gset.cll
ol
paste(names(ora.stat[[1]])[i[1]], names(ora.stat[[2]])[i[2]], sep=' and ')
nm <- rownames(ind)[1]
nm
ind
ol<-sapply(rownames(ind), function(nm) {
i<-ind[nm, ];
g<-intersect(ora.sets[[1]][[i[1]]], ora.sets[[2]][[i[2]]]);
f<-paste('ORA/', 'ora_', nm, '.html', sep='');
c <- paste(paste(comp, c(names(deg1)[i[1]], names(deg2)[i[2]]), sep='::'), collapse=' and ')
#c<-paste(names(ora.stat[[1]])[i[1]], names(ora.stat[[2]])[i[2]], sep=' and ');
t<-gset[[1]][g, ];
t$Name<-AddHref(t$Name, t$URL);
t<-t[, 1:3];
t<-cbind(t, ora.stat[[1]][[i[1]]][g, c(2, 4, 5, 6)], ora.stat[[2]][[i[2]]][g, c(2, 4, 5, 6)]);
colnames(t)[4:11]<-paste(colnames(t)[4:11], rep(names(grp), each=4), sep='_');
fn<-CreateDatatable(t, paste(path, f, sep='/'), rownames = FALSE, caption=c);
list(c, f);
});
ol
ind<-cbind(c(1, 1, 2, 2), c(1, 2, 1, 2));
rownames(ind)<-c('up-up', 'up-down', 'down-up', 'down-down');
par(mfrow=c(2,2));
apply(ind, 1, function(i) PlotVenn(ora.sets[[1]][[i[1]]], ora.sets[[2]][[i[2]]], c(names(ora.sets[[1]])[i[1]], names(ora.sets[[2]])[i[2]]), u=ora.univ))->vnn;
ol<-sapply(rownames(ind), function(nm) {
i<-ind[nm, ];
g<-intersect(ora.sets[[1]][[i[1]]], ora.sets[[2]][[i[2]]]);
f<-paste('ORA/', 'ora_', nm, '.html', sep='');
c <- paste(paste(comp, c(names(deg1)[i[1]], names(deg2)[i[2]]), sep='::'), collapse=' and ')
#c<-paste(names(ora.stat[[1]])[i[1]], names(ora.stat[[2]])[i[2]], sep=' and ');
t<-gset[[1]][g, ];
t$Name<-AddHref(t$Name, t$URL);
t<-t[, 1:3];
t<-cbind(t, ora.stat[[1]][[i[1]]][g, c(2, 4, 5, 6)], ora.stat[[2]][[i[2]]][g, c(2, 4, 5, 6)]);
colnames(t)[4:11]<-paste(colnames(t)[4:11], rep(names(grp), each=4), sep='_');
fn<-CreateDatatable(t, paste(path, f, sep='/'), rownames = FALSE, caption=c);
list(c, f);
});
ol
ol<-sapply(rownames(ind), function(nm) {
i<-ind[nm, ];
g<-intersect(gsea.st[[1]][[i[1]]], gsea.st[[2]][[i[2]]]);
f<-paste('GSEA/', 'gsea_', nm, '.html', sep='');
c <- paste(paste(comp, c(names(deg1)[i[1]], names(deg2)[i[2]]), sep='::'), collapse=' and ')
t<-gsea.stat[[1]][g, 1:3];
t<-t[, 1:3];
t<-cbind(t, gsea.stat[[1]][g, c(4, 5, 6)], gsea.stat[[2]][g, c(4, 5, 6)]);
colnames(t)[4:9]<-paste(colnames(t)[4:9], rep(names(grp), each=3), sep='_');
fn<-CreateDatatable(FormatNumeric(t), paste(path, f, sep='/'), rownames=FALSE, caption=c);
list(c, f);
});
gsea.st<-lapply(gsea.s, rownames);
gsea.st<-list(gsea.st[1:2], gsea.st[3:4]);
names(gsea.st)<-names(grp);
names(gsea.st[[1]])<-names(ora.sets[[1]]);
names(gsea.st[[2]])<-names(ora.sets[[2]]);
ind<-cbind(c(1, 1, 2, 2), c(1, 2, 1, 2));
rownames(ind)<-c('up-up', 'up-down', 'down-up', 'down-down');
par(mfrow=c(2,2));
apply(ind, 1, function(i) PlotVenn(gsea.st[[1]][[i[1]]], gsea.st[[2]][[i[2]]], c(names(gsea.st[[1]])[i[1]], names(gsea.st[[2]])[i[2]]), u=gsea.univ))->vnn;
ol<-sapply(rownames(ind), function(nm) {
i<-ind[nm, ];
g<-intersect(gsea.st[[1]][[i[1]]], gsea.st[[2]][[i[2]]]);
f<-paste('GSEA/', 'gsea_', nm, '.html', sep='');
c <- paste(paste(comp, c(names(deg1)[i[1]], names(deg2)[i[2]]), sep='::'), collapse=' and ')
t<-gsea.stat[[1]][g, 1:3];
t<-t[, 1:3];
t<-cbind(t, gsea.stat[[1]][g, c(4, 5, 6)], gsea.stat[[2]][g, c(4, 5, 6)]);
colnames(t)[4:9]<-paste(colnames(t)[4:9], rep(names(grp), each=3), sep='_');
fn<-CreateDatatable(FormatNumeric(t), paste(path, f, sep='/'), rownames=FALSE, caption=c);
list(c, f);
});
lns<-paste('  - [', ol[1, ], ']', sep='');
lns<-paste(lns, '(', ol[2, ], ')', sep='');
lns<-paste(lns, collapse='\n');
lns
ol
CreateReport('summarize_two.yaml')
setwd('../summarize_three/')
CreateReport('summarize_three.yaml')
CreateReport('summarize_three.yaml')
CreateReport('summarize_three.yaml')
CreateReport('summarize_three.yaml')
setwd('../summarize_two/')
ls()
rm(list=ls())
dir()
setwd('../summarize_three/')
dir()
name.yaml <- 'summarize_three.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'MASS', 'gplots', 'scatterplot3d',
'VennDiagram', 'RoCA', 'rchive', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table');
knitr::opts_chunk$set(eval=TRUE, dpi=300, fig.pos="H", fig.width=8, fig.height=6, echo=FALSE, warning=FALSE, message=FALSE, fig.path='FIGURE/');
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
## By default, before knitting this R Markdown file, the YAML file pairing it has been loaded.
## But, the developer can also provide the option to load the YAML file on the fly.
## So, the template can be run using the "Knit HTML" button in RStudio
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
nm <- names(yml$input$comparison)[1]
nm
f <- yml$input$comparison[[nm]];
f
f$result
DownloadFile(f$result, path.input))
DownloadFile(f$result, path.input)
fn0 <- DownloadFile(f$result, path.input);
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
}
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
setwd('~/Documents/RoCA/template/de/summarize_three/')
dir()
name.yaml <- 'summarize_three.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'MASS', 'gplots', 'scatterplot3d',
'VennDiagram', 'RoCA', 'rchive', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table');
knitr::opts_chunk$set(eval=TRUE, dpi=300, fig.pos="H", fig.width=8, fig.height=6, echo=FALSE, warning=FALSE, message=FALSE, fig.path='FIGURE/');
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
## By default, before knitting this R Markdown file, the YAML file pairing it has been loaded.
## But, the developer can also provide the option to load the YAML file on the fly.
## So, the template can be run using the "Knit HTML" button in RStudio
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
# Loading results from pairwsie DEG analysis
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
gset <- ImportR(DownloadFile(yml$input$geneset, path.input));
smpl <- ImportR(DownloadFile(yml$input$sample, path.input));
comp <- names(yml$input$comparison);
grp <- lapply(res, function(res) names(res$inputs$comparison));
smp <- lapply(res, function(x) x$inputs$comparison);
names(res) <- names(grp) <- names(smp) <- names(yml$input$comparison);
sapply(names(res), function(nm)
saveRDS(res[[nm]], paste(path.input, paste('result_', nm, '.rds', sep=''), sep='/'))) -> x;
grps<-do.call('c', lapply(res, function(res) res$inputs$comparison));
smpl <- smpl[unlist(smp, use.names=FALSE), ];
s0 <- setdiff(unlist(smp), rownames(smpl));
if (length(s0) > 0) stop('Error: missing metadata of sample(s): ', paste(s0, collapse='; '), '\n');
de<-lapply(res, function(res) res$de);
ora<-lapply(res, function(res) res$ora);
gsea<-lapply(res, function(res) res$gsea);
ind1 <- c(1,1,2);
ind2 <- c(2,3,3);
# Combined matrix
expr.all <- lapply(res, function(res) {
input<-res$inputs;
s<-c(input$comparison[[1]], input$comparison[[2]]);
sapply(s, function(s) input$expr[, s]);
});
g<-Reduce('intersect', lapply(expr.all, rownames));
expr.all<-do.call('cbind', lapply(expr.all, function(d) d[g, ]));
yml$input$comparison
setwd('../summarize_two/')
rm(list=ls())
name.yaml <- 'summarize_two.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'MASS', 'gplots', 'RoCA', 'awsomics', 'rchive', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table');
knitr::opts_chunk$set(eval=TRUE, dpi=300, fig.pos="H", fig.width=8, fig.height=6, echo=FALSE, warning=FALSE, message=FALSE, fig.path='FIGURE/');
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
## By default, before knitting this R Markdown file, the YAML file pairing it has been loaded.
## But, the developer can also provide the option to load the YAML file on the fly.
## So, the template can be run using the "Knit HTML" button in RStudio
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
# Loading results from pairwsie DEG analysis
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
gset <- ImportR(DownloadFile(yml$input$geneset, path.input));
smpl <- ImportR(DownloadFile(yml$input$sample, path.input));
comp <- names(yml$input$comparison);
grp <- lapply(res, function(res) names(res$inputs$comparison));
smp <- lapply(res, function(x) x$inputs$comparison);
names(res) <- names(grp) <- names(smp) <- names(yml$input$comparison);
sapply(names(res), function(nm)
saveRDS(res[[nm]], paste(path.input, paste('result_', nm, '.rds', sep=''), sep='/'))) -> x;
grps<-do.call('c', lapply(res, function(res) res$inputs$comparison));
smpl <- smpl[unlist(smp, use.names=FALSE), ];
s0 <- setdiff(unlist(smp), rownames(smpl));
if (length(s0) > 0) stop('Error: missing metadata of sample(s): ', paste(s0, collapse='; '), '\n');
de<-lapply(res, function(res) res$de);
ora<-lapply(res, function(res) res$ora);
gsea<-lapply(res, function(res) res$gsea);
# Combined matrix
expr.all <- lapply(res, function(res) {
input<-res$inputs;
s<-c(input$comparison[[1]], input$comparison[[2]]);
sapply(s, function(s) input$expr[, s]);
});
g<-Reduce('intersect', lapply(expr.all, rownames));
expr.all<-do.call('cbind', lapply(expr.all, function(d) d[g, ]));
yml$input$comparison
rm(list=ls())
setwd('../summarize_three/')
name.yaml <- 'summarize_three.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'MASS', 'gplots', 'scatterplot3d',
'VennDiagram', 'RoCA', 'rchive', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table');
knitr::opts_chunk$set(eval=TRUE, dpi=300, fig.pos="H", fig.width=8, fig.height=6, echo=FALSE, warning=FALSE, message=FALSE, fig.path='FIGURE/');
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
## By default, before knitting this R Markdown file, the YAML file pairing it has been loaded.
## But, the developer can also provide the option to load the YAML file on the fly.
## So, the template can be run using the "Knit HTML" button in RStudio
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
# Loading results from pairwsie DEG analysis
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
gset <- ImportR(DownloadFile(yml$input$geneset, path.input));
smpl <- ImportR(DownloadFile(yml$input$sample, path.input));
comp <- names(yml$input$comparison);
grp <- lapply(res, function(res) names(res$inputs$comparison));
smp <- lapply(res, function(x) x$inputs$comparison);
names(res) <- names(grp) <- names(smp) <- names(yml$input$comparison);
sapply(names(res), function(nm)
saveRDS(res[[nm]], paste(path.input, paste('result_', nm, '.rds', sep=''), sep='/'))) -> x;
grps<-do.call('c', lapply(res, function(res) res$inputs$comparison));
smpl <- smpl[unlist(smp, use.names=FALSE), ];
s0 <- setdiff(unlist(smp), rownames(smpl));
if (length(s0) > 0) stop('Error: missing metadata of sample(s): ', paste(s0, collapse='; '), '\n');
de<-lapply(res, function(res) res$de);
ora<-lapply(res, function(res) res$ora);
gsea<-lapply(res, function(res) res$gsea);
ind1 <- c(1,1,2);
ind2 <- c(2,3,3);
# Combined matrix
expr.all <- lapply(res, function(res) {
input<-res$inputs;
s<-c(input$comparison[[1]], input$comparison[[2]]);
sapply(s, function(s) input$expr[, s]);
});
g<-Reduce('intersect', lapply(expr.all, rownames));
expr.all<-do.call('cbind', lapply(expr.all, function(d) d[g, ]));
yml$input$comparison
setwd('../summarize_two/')
rm(list=ls())
# Loading results from pairwsie DEG analysis
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
gset <- ImportR(DownloadFile(yml$input$geneset, path.input));
smpl <- ImportR(DownloadFile(yml$input$sample, path.input));
comp <- names(yml$input$comparison);
grp <- lapply(res, function(res) names(res$inputs$comparison));
smp <- lapply(res, function(x) x$inputs$comparison);
names(res) <- names(grp) <- names(smp) <- names(yml$input$comparison);
sapply(names(res), function(nm)
saveRDS(res[[nm]], paste(path.input, paste('result_', nm, '.rds', sep=''), sep='/'))) -> x;
grps<-do.call('c', lapply(res, function(res) res$inputs$comparison));
smpl <- smpl[unlist(smp, use.names=FALSE), ];
s0 <- setdiff(unlist(smp), rownames(smpl));
if (length(s0) > 0) stop('Error: missing metadata of sample(s): ', paste(s0, collapse='; '), '\n');
de<-lapply(res, function(res) res$de);
ora<-lapply(res, function(res) res$ora);
gsea<-lapply(res, function(res) res$gsea);
# Combined matrix
expr.all <- lapply(res, function(res) {
input<-res$inputs;
s<-c(input$comparison[[1]], input$comparison[[2]]);
sapply(s, function(s) input$expr[, s]);
});
g<-Reduce('intersect', lapply(expr.all, rownames));
expr.all<-do.call('cbind', lapply(expr.all, function(d) d[g, ]));
rm(list=ls())
name.yaml <- 'summarize_two.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'MASS', 'gplots', 'RoCA', 'awsomics', 'rchive', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table');
knitr::opts_chunk$set(eval=TRUE, dpi=300, fig.pos="H", fig.width=8, fig.height=6, echo=FALSE, warning=FALSE, message=FALSE, fig.path='FIGURE/');
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
## By default, before knitting this R Markdown file, the YAML file pairing it has been loaded.
## But, the developer can also provide the option to load the YAML file on the fly.
## So, the template can be run using the "Knit HTML" button in RStudio
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
# Loading results from pairwsie DEG analysis
yml$input$comparison <- lapply(yml$input$comparison, function(c) {
if (is.list(c)) c else {
if (is.character(c) & dir.exists(c[1]))
list(result=paste(c, 'R/result.rds', sep='/'), index=paste(c, 'index.html', sep='/')) else
stop('Error: comparison results not found\n');
}
})
res <- lapply(names(yml$input$comparison), function(nm) {
f <- yml$input$comparison[[nm]];
fn0 <- DownloadFile(f$result, path.input);
fn1 <- sub('result.rds$', paste(nm, '.rds', sep=''), fn0);
if (fn1 != fn0) file.rename(fn0, fn1);
ImportR(fn1);
});
gset <- ImportR(DownloadFile(yml$input$geneset, path.input));
smpl <- ImportR(DownloadFile(yml$input$sample, path.input));
comp <- names(yml$input$comparison);
grp <- lapply(res, function(res) names(res$inputs$comparison));
smp <- lapply(res, function(x) x$inputs$comparison);
names(res) <- names(grp) <- names(smp) <- names(yml$input$comparison);
sapply(names(res), function(nm)
saveRDS(res[[nm]], paste(path.input, paste('result_', nm, '.rds', sep=''), sep='/'))) -> x;
grps<-do.call('c', lapply(res, function(res) res$inputs$comparison));
smpl <- smpl[unlist(smp, use.names=FALSE), ];
s0 <- setdiff(unlist(smp), rownames(smpl));
if (length(s0) > 0) stop('Error: missing metadata of sample(s): ', paste(s0, collapse='; '), '\n');
de<-lapply(res, function(res) res$de);
ora<-lapply(res, function(res) res$ora);
gsea<-lapply(res, function(res) res$gsea);
# Combined matrix
expr.all <- lapply(res, function(res) {
input<-res$inputs;
s<-c(input$comparison[[1]], input$comparison[[2]]);
sapply(s, function(s) input$expr[, s]);
});
g<-Reduce('intersect', lapply(expr.all, rownames));
expr.all<-do.call('cbind', lapply(expr.all, function(d) d[g, ]));
yml$input$comparison
library(RoCA)
CreateReport('summarize_two.yaml')
library(RoCA)
CreateReport('summarize_two.yaml')
