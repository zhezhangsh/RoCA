b
b[b[,2]=='m54215_180519_165510/6619498/0_21494', ]->c
mth[c[1,1]]
library("TxDb.Hsapiens.UCSC.hg38.knownGene", lib.loc="~/Library/R/3.3/library")
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
exon <- exons(txdb)
exon[1:2]
exon <- exons(txdb, columns='gene_name')
exon <- exons(txdb, columns='genename')
gn <- genes(txdb)
gn[1:2]
columns(txdb)
exon <- exons(txdb, columns='TXNAME')
exon[1:3]
exon <- exons(txdb, columns='GENEID')
exon[1:3]
c
mth
loc <- mth[c[1,1]]
loc
loc <- loc[[1]]
loc <- GRanges(loc[1,1], IRanges(loc[1,2], loc[1,3]))
x <- exon[countOverlaps(exon, loc)]
x
exon[1:2]
loc <- GRanges('chr1', IRanges(loc[1,2], loc[1,3]))
seqlevels(exon) <- 'chr`'
seqlevels(exon) <- 'chr1'
exon
seqlevels(loc) <- 'chr1'
loc
x <- exon[countOverlaps(exon, loc)]
x
z <- do.call('rbind', mth)
z
loc <- GRanges('chr1', IRanges(25269698, 25364888))
x <- exon[countOverlaps(exon, loc)]
x
loc
exon
x <- exon[countOverlaps(exon, loc)>0]
x
w <- width(x)
summary(w)
x$width <- w
x
y <- as.data.frame(x)
y
ex <- GRanges('chr1', IRanges(25301520 25301686))
ex <- GRanges('chr1', IRanges(25301520, 25301686))
ex
RHD <- list(exon=ex)
u <- getSeq(RHD, Hsapiens)
u <- getSeq(Hsapiens, RHD)
names(Hsapiens)[1:3]
ex <- GRanges('1', IRanges(25301520, 25301686))
RHD <- list(exon=ex)
u <- getSeq(Hsapiens, RHD)
u <- getSeq(Hsapiens, RHD[[1]])
u
names(RHD)
RHD$sequence <- u
c
s
length(s)
v <- DNAString(s)
v
c
names(v) <- c[1,2 ]
names(s) <- c[1,2]
v <- DNAString(s)
v
c
v <- readRDS('primer.rds')
v[c[1,1]]
v[c[1,1], ]
v
v[v[,1]==c[1,1], ]
u <- v[1, 2]
u
names(u) <- v[1,1]
u <- DNAString(u)
seq <- c(primer=u, read=s, exon=RHD$sequence)
seq <- list(primer=u, read=s, exon=RHD$sequence)
seq
seq[[1]]
seq[[2]]
seq[[2]] <- DNAString(seq[[2]])
seq[[2]]
seq[[1]]
seq[[3]]
names(seq)
RHD[[1]]
test <- list(gene='RHD', exon=RHD[[1]], sequence=seq)
setwd('~/Google Drive/Projects/Chou/')
dir.create('R')
setwd('R')
dir()
saveRDS(test, 'exon_test.rds')
str(test)
test
s1 <- test$sequence$read
s2 <- test$sequence$exon
pairwiseAlignment(s2, s1)
pw <- pairwiseAlignment(s2, s1, type='local')
pw
?pairwiseAlignment
test
test$sequence$primer
test$sequence$exon
test$sequence$exon
names(test$sequence)
c
names(test$sequence) <- c('RHD_26_O240', 'm54215_180519_165510/6619498/0_21494', 'RHD_EXON', )
names(test$sequence) <- c('RHD_26_O240', 'm54215_180519_165510/6619498/0_21494', 'RHD_EXON')
names(test, 'exon_test.rds')
saveRDS(test, 'exon_test.rds')
mth['RHD_26_O240']
b
x
x <- as.data.frame(x)
x
mth[c[1,1]]
x[x[,2]<25315423 & x[,3]>25315447]
x[x[,2]<25315423 & x[,3]>25315447, ]
x[x[,2]<25315423+100 & x[,3]>25315447-100, ]
test$exon
z <- getSeq(Hsapiens, GRanges('1', IRanges=c(25317000, 25317079)))
z <- getSeq(Hsapiens, GRanges('1', IRanges(25317000, 25317079)))
z
pairwiseAlignment(z, test$sequence$`m54215_180519_165510/6619498/0_21494`)
pairwiseAlignment(z, test$sequence$`m54215_180519_165510/6619498/0_21494`, type='local')
names(test$sequence)
b[b[,2]=='m54215_180519_165510/6619498/0_21494', ]
mth[['RHD_26_O240']]
z <- test$exon
z
mth[[b[1,1]]]
z <- GRanges('1', IRanges(25315423, 25315447))
z
width(z)
z <- resize(z, 500, fix='center')
z
s <- getSeq(Hsapiens, z)
pairwiseAlignment(s, test$sequence$`m54215_180519_165510/6619498/0_21494`)
pairwiseAlignment(s, test$sequence$`m54215_180519_165510/6619498/0_21494`, type='local')
pw <- pairwiseAlignment(s, test$sequence$`m54215_180519_165510/6619498/0_21494`, type='local')
pw
str(pw)
class(pw)
?PairwiseAlignmentsSingleSubject
start(pw)
end(pw)
as.data.frame(pw)
pw
width(pw)
length(s)
s
as.character(pw)
pw
length(pw)
writePairwiseAlignments(pw, 'test')
class(pw)
summary(pw)
?summary
pattern(pw)
subject(pw)
?pattern
as.character(pattern(pw))
class(pattern(pw))
nchar(as.character(pattern(pw)))
nchar(as.character(subject(pw)))
length(pw)
alphabet(pw)
type(pw)
consensusMatrix(pw)
consensusString(pw)
coverage(pw)
Views(pw)
start(Views(pw))
start(pw)
nchar(pw)
insertionpw
insertion(pw)
s1
s2
pairwiseAlignment(s2, s1)
x <- pairwiseAlignment(test$sequence$`m54215_180519_165510/6619498/0_21494`, s, type='local')
x
aligned(pw)
insertion(pw)
s
Views(pw)
pw
deletion(pw)
indel(pw)
score(pw)
pw[1]
pw[[1]]
length(pw)
pw[1]
pw[1][1]
pw[1][1][1]
pw[1][1][1][1]
Views(pw)
as.character(Views(pw))
start(subject(pw))
end(subject(pw))
start(pattern(pw))
end(pattern(pw))
?DNAString
args(DNAString)
DNAString('', nchar=100)
DNAString('', start=1, nchar=100)
DNAString('N', start=1, nchar=100)
DNAString()
DNAString('N')
DNAString('N', nchar=100)
DNAString('N', nchar=100, allow.nonnarrowing=TRUE)
x <- DNAString('NNN')
subseq(x, 1, 2)
subseq(x, 1, 1) <- 'A'
x <- 'NNN'
substr(x, 1, 1)
substr(x, 1, 1) <- 'A'
x
x <- 'NNNNNNNNNN'
substr(x, 3, 5) <- 'ABC'
x
dir()
getwd()
dir()
length(x)
length(y)
y
head(y)
head(a)
pw
str(pw)
Views(pw)
insertion(pw)
deletion(pw)
replaceAt(pw)
class(pw)
?PairwiseAlignmentsSingleSubject
summary(pw)
alphabet(pw)
aligned(pw)
type(pw)
as.character(pw)
as.matrix(pw)
as.matrix(pw)->x
dim(x)
x[1, 1:10]
toString(pw)
Views(pw)
as.character(Views(pw))
nchar(pw)
PairwiseAlignmentsSingleSubjectSummary(pw)
PairwiseAlignmentsSingleSubjectSummary
PairwiseAlignments("-PA--W-HEAE", "HEAGAWGHE-E")
pattern <- AAStringSet(c("HLDNLKGTF", "HVDDMPNAL"))
subject <- AAString("SMDDTEKMSMKL")
nw1 <- pairwiseAlignment(pattern, subject, substitutionMatrix = "BLOSUM50",
gapOpening = 3, gapExtension = 1)
pattern(nw1)
subject(nw1)
aligned(nw1)
as.character(nw1)
as.character(pw)
as.matrix(nw1)
as.matrix(pw)->x
dim(x)
score(nw1)
score(nw1)
dir()
getwd()
setwd('~/Documents/RoCA/template/rh/evaluate_primer/')
dir()
s <- readRDS('random10k.rds')
nchar(s)->n
summary(n)
s[n>10000]->x
length(x)
x[1:2]
nchar(x)[1:2]
x[1]
x <- 'browser details s1              5735  6526 15030 18743  92.5%     6   -   27249332  27256925   7594
browser details s1              5712    28  8519 18743  91.9%     6   +   27249410  27256929   7520
browser details s1              2810 15025 18743 18743  92.5%     6   +   27248266  27251911   3646
browser details s1               126  6794  7628 18743  84.8%     6   +   27256086  27256846    761
browser details s1                51 10675 10738 18743  91.7%     3   -   58300119  58300187     69
browser details s1                39 10404 10545 18743  95.4%     1   -   45363888  45364033    146
browser details s1                39  6834  6884 18743  90.3%     6   +   27256020  27256068     49'
x
x <- strsplit(x, '\n')
x
x <- strsplit(x[[1]], ' ')
x
x <- lapply(x, function(x) x[x!=])
x <- lapply(x, function(x) x[x!=''])
x
do.call('rbind', x)
x
do.call('rbind', x)->x
x
x <- data.frame(x, stringsAsFactors = F)
x
x[, 11] <- as.numeric(x[, 11])
x[, 12] <- as.numeric(x[, 12])
x
x
x[x[, 9]=='6', ]
x[x[, 9]=='6', ]->x
for (i in 4:7]) x[, i]<- as.numeric(x[, i])
for (i in 4:7) x[, i] <- as.numeric(x[, i])
x[, 13] <- as.numeric(x[, 13])
x
x <- x[order(x[, 4]), ]
x
x <- x[order(x[, 5]), ]
x
x[, 6]-x[, 5]
x <- cbind(x, x[, 6]-x[, 5])
x
x <- cbind(x, x[, 11]-x[2, 11])
x
27249410 -27256929
27251283-27251239
length(s)
nchar(s[1])
nchar(s[2])
length(s)
length(x)
length(a)
nchar(x)
a <- s[n>=10000]
nchar(a[1])
b <- substr(a, 6526, 8519)
b
b <- substr(a[1], 6526, 8519)
b
x
27256925-27256787
27256728-27256929
c <- substr(b, nchar(b)-200, nchar(b))
c
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='local')
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='gloabal')
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='global')
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='local-global')
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='global-local')
c
pairwiseAlignment(c, reverseComplement(DNAString(c)), type='global')
x
c
b
c <- substr(b, 971, 1792)
c
ad <- 'ATCTCTCTCAACAACAACAACGGAGGAGGAGGAAAAGAGAGAGAT'
matchPattern(ad, b, 3)
matchPattern(ad, b, 6)
matchPattern(ad, b, 10)
nchar(ad)
matchPattern(ad, reverseComplement(DNAString(b)), 6)
pairwise(ad, b, type='global-local')
pairwiseAlignment(ad, b, type='global-local')
c
nchar(c)
nchar(b)
c <- substr(b, 1000, nchar(b))
pairwiseAlignment(ad, c, type='global-local')
c <- substr(b, 1100, 1500)
pairwiseAlignment(ad, c, type='global-local')
nchar()
nchar(a)
nchar(a[1])
seq['m54215_180519_165510/6947194/2904_21647']
s['m54215_180519_165510/6947194/2904_21647']
pairwiseAlignment(ad, reverseComplement(c), type='global-local')
pairwiseAlignment(ad, reverseComplement(DNAString(c)), type='global-local')
pairwiseAlignment(ad, reverseComplement(DNAString(b)), type='global-local')
x <- s['m54215_180519_165510/6947194/2904_21647']
x
pairwiseAlignment(ad, reverseComplement(DNAString(x)), type='global-local')
pairwiseAlignment(ad, x, type='global-local')
pairwiseAlignment(ad, s[2], type='global-local')
sc <- sapply(s[1:10], function(s) score(pairwiseAlignment(ad, s, type='global-local')))
sc
sc <- sapply(s[1:200], function(s) score(pairwiseAlignment(ad, s, type='global-local')))
sc
sort(sc)
pairwiseAlignment(ad, s['m54215_180519_165510/5440252/53299_77973'], type='global-local')
x <- s['m54215_180519_165510/5440252/53299_77973']
x
nchar(x)
pairwiseAlignment(ad, x, type='global-local')
y <- nchar(x, 1, 5000)
y <- substr(x, 1, 5000)
y
sort(sc)
x <- s['m54215_180519_165510/6750746/75461_91716']
x
pairwise(ad, x, type='global-local')
pairwiseAlignment(ad, x, type='global-local')
sc <- sapply(s[201:500], function(s) score(pairwiseAlignment(ad, s, type='global-local')))
sort(sc)
x <- seq['m54215_180519_165510/6029771/0_12590']
pairwise(ad, x, type='global-local')
pairwiseAlignment(ad, x, type='global-local')
ad
x
x <- s['m54215_180519_165510/6029771/0_12590']
pairwiseAlignment(ad, x, type='global-local')
.libPaths()
library(Biostrings)
?readDNAMultipleAlignment
origMAlign <-
readDNAMultipleAlignment(filepath =
system.file("extdata",
"msx2_mRNA.aln",
package="Biostrings"),
format="clustal")
rownames(origMAlign)
class(origMAlign)
origMAlign
maskMotif(origMAlign, "TATA")
consensusString(origMAlign)
origMAlign <-
readDNAMultipleAlignment(filepath = '~/Desktop/muscle-I20180808-164229-0273-34774193-p2m.clw'),
format="clustal")
origMAlign <-
readDNAMultipleAlignment(filepath = '~/Desktop/muscle-I20180808-164229-0273-34774193-p2m.clw', format="clustal")
aln <-
readDNAMultipleAlignment(filepath = '~/Desktop/muscle-I20180808-164229-0273-34774193-p2m.clw', format="clustal")
aln
consensusString(aln)
consensusString(aln)->con
nchar(con)
con
ccc <- gsub('-', '', con)
ccc
nchar(ccc)
aln <-readDNAMultipleAlignment(filepath = '~/Desktop/muscle2.clw', format="clustal")
aln
consensusViews(aln)
con <- consensusString(aln)
con
ccc <- gsub('-', '', con)
nchar(ccc)
seq[[1]]
con
ccc
consensusMatrix(aln)
consensusMatrix(aln)->m
m <- t(m)
head(m)
hist(m[, '-'])
nrow(m[m[, '-']<200, ])
m0 <- m[m[, '-']<200, ]
dim(m0)
head(m0)
z <- m0[, 1:4]
summary(rowSums(z))
u <- rowSums(z)
v <- apply(u, 1, max)
v <- apply(z, 1, max)
plot(u, v)
abline(0, 1)
summary(v/u)
aln3 <-readDNAMultipleAlignment(filepath = '~/Desktop/muscle3.clw', format="clustal")
aln3 <-readDNAMultipleAlignment(filepath = '~/Desktop/muscle3', format="clustal")
aln3
consensusString(aln3)
consensusString(aln3)->a3
nchar(a3)
gsub('-', '', a3)
gsub('-', '', a3)->a3
a3
nchar(a3)
m3 <- consensusMatrix(aln3)
m3
m3 <- t(m3)
head(m3)
hist(m3[, '-'])
nrow(m3[m3[, '-']<200, ])
nrow(m3[m3[, '-']<250, ])
nrow(m3[m3[, '-']<300, ])
table(m3[, '-'])
plot(density(m3[, '-']))
z <- m3[m3[, '-']<300, ]
dim(z)
u <- rowSums(z[, 1:3])
u <- rowSums(z[, 1:4])
v <- sapply(z[, 1:4], 1, max)
v <- apply(z[, 1:4], 1, max)
summary(v/u)
plot(v/u)
z[v/u<0.5, ]
z[v/u<0.8, ]
consensusString(z)
which.min(z[, 1:4])
i <- apply(z[, 1:4], 1, which.max)
i
colnames(z)[i]
colnames(z)[i]->y
paste(y, collapse='')
paste(y, collapse='')->y
y=="GTGTGTTGTAACCGAGTGCTGGGGATTCACCACATCTCCGTCATGCACTCCATCTTCAGCTTGCTGGGTCTGCTTGGAGAGATCACCTACATTGTGCTGCTGGTGCTTCATACTGTCTGGAACGGCAATGGCAT"
z[v/u<2/3, ]
spl[[4]][v/u<2/3, ]
hist(v/u)
