p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot(m, axes=FALSE, ylim=c(0, max(m)));
axis(4);
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2
ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot(m, axes=FALSE, ylim=c(0, max(m)));
axis(4);
par(new=FALSE);
}
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2
ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot(m, axes=FALSE, ylim=c(0, max(m)));
axis(4);
par(new=FALSE);
}
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2
ylim=c(0, ylim));
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot(m, axes=FALSE, ylim=c(0, max(m)));
axis(4);
}
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot(m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i');
axis(4);
}
box();
if (length(p.value) == length(match.position)) margin <- 5 else margin <- 2;
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i');
axis(4);
}
par()
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i');
axis(4);
}
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', pch='*', col='darkblue', cex=2);
axis(4);
}
box();
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', pch='*', col='darkblue', cex=2, type='l');
if (length(p.value) == length(match.position)) margin <- 5 else margin <- 2;
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', pch='*', col='darkblue', cex=2, type='l');
axis(4);
}
box();
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', pch='*', col='darkblue', cex=2);
lines((1:num.interval)-0.5, m, col='green')
axis(4);
}
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', type='l', col='green', cex=2);
points((1:num.interval)-0.5, m, col='darkblue', pch='*');
axis(4);
}
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', type='l', col='green');
points((1:num.interval)-0.5, m, col='darkblue', pch='*', cex=2);
axis(4);
}
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', type='l', col='green');
points((1:num.interval)-0.5, m, col='darkblue', pch='*', cex=2);
axis(4);
}
abline(v=num.interval/2);
box();
par(mar=c(5,5,3,margin));
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim+1));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', type='l', col='green');
points((1:num.interval)-0.5, m, col='darkblue', pch='*', cex=2);
axis(4);
}
abline(v=num.interval/2);
box();
ylim <- 10*ceiling(max(cnt)/10);
barplot(cnt, width=1, space=0, border=NA, xlab='Position in sequences', ylab='Number of matches', cex.lab=2,
xlim=c(0, num.interval), xaxs='i', ylim=c(0, ylim+1));
axis(1, at=c(0, num.interval/2, num.interval), label=c('Start', 'Center', 'End'));
if (length(p.value) == length(pos)) {
mtext("Average of -Log10(P value)", side=4, line=3, cex=2);
p <- -log10(p.value);
p[p==Inf] <- max(p[p<Inf]);
m <- sapply(1:num.interval, function(i) mean(p[pos==i]));
par(new=TRUE);
plot((1:num.interval)-0.5, m, axes=FALSE, ylim=c(0, max(m)+1), yaxs='i', type='l', col='green');
points((1:num.interval)-0.5, m, col='darkblue', pch='*', cex=2);
axis(4);
}
abline(v=num.interval/2, lty=2);
box();
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
x <- matches[[1]]
dim(x)
head(x)
wid <- width(seq);
names(wid) <- names(seq);
len <- wid[x[[1]]]
len
PlotPWMMatchPosition(x[, 2], len, x$pvalue, 30)
plot(0)
PlotPWMMatchPosition(x[, 2], len, x$pvalue, 30)
m <- matches[[1]]
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
});
m <- matches[[6]]
hist(m[, 2])
hist(m[, 2], br=20)
hist(m[, 2], br=100)
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
});
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
});
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
});
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
});
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
}) -> x;
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
}) -> x;
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
}) -> x;
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
main(title=names(res)[i], cex=2);
}) -> x;
par(mfrow=c(round(length(res)/2), 2));
sapply(matches, function(m) {
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
title(main=names(res)[i], cex=2);
}) -> x;
par(mfrow=c(round(length(res)/2), 2));
sapply(names(matches), function(nm) {
m   <- match[[nm]];
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
title(main=nm, cex=2);
}) -> x;
par(mfrow=c(round(length(res)/2), 2));
sapply(names(matches), function(nm) {
m   <- matches[[nm]];
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
title(main=nm, cex=2);
}) -> x;
install_local('~/Documents/Agri/')
t <- matches[[1]]
head(t)
table(t$strand)
stat <- sapply(matches, function(t) {
ns <- c(nrow(t), length(unique(t[, 1])));
ln <- max(t[,3]-t[,2]+1, na.rm=TRUE);
sc <- c(min(t$score), mean(t$score), max(t$score));
fq <- ns[1]/(sum(wid)/1000);
sr <- round(100*nrow(t[t$strand==1, , drop=FALSE])/nrow(t), 2);
c(ln, fq, ns, sr, sc);
});
stat <- t(stat);
dimnames(stat) <- list(names(res), c('Len_Motif', 'Match_Per_Kb', 'Num_Match', 'Num_Seq', 'Strand(%)',
stat <- sapply(matches, function(t) {
ns <- c(nrow(t), length(unique(t[, 1])));
ln <- max(t[,3]-t[,2]+1, na.rm=TRUE);
sc <- c(min(t$score), mean(t$score), max(t$score));
fq <- ns[1]/(sum(wid)/1000);
sr <- round(100*nrow(t[t$strand==1, , drop=FALSE])/nrow(t), 2);
c(ln, fq, ns, sr, sc);
});
stat <- t(stat);
stat <- sapply(matches, function(t) {
ns <- c(nrow(t), length(unique(t[, 1])));
ln <- max(t[,3]-t[,2]+1, na.rm=TRUE);
sc <- c(min(t$score), mean(t$score), max(t$score));
fq <- ns[1]/(sum(wid)/1000);
sr <- round(100*nrow(t[t$strand==1, , drop=FALSE])/nrow(t), 2);
c(ln, fq, ns, sr, sc);
});
stat
stat <- t(stat);
dimnames(stat) <- list(names(res), c('Len_Motif', 'Match_Per_Kb', 'Num_Match', 'Num_Seq', 'Strand(%)',
'Min_Score', 'Mean_Score', 'Max_Score'));
stat
lnk <- paste('[', rownames(stat), '](', paste('table/Rematch_', names(res), '.html', sep=''), ')', sep='');
stat <- data.frame(Motif=lnk, stat, stringsAsFactors = FALSE);
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(names(matches), function(nm) {
m   <- matches[[nm]];
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
title(main=nm, cex=2);
}) -> x;
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
install_local('~/Documents/Agri/')
par(mfrow=c(round(length(res)/2), 2));
sapply(names(matches), function(nm) {
m   <- matches[[nm]];
pos <- m$start;
ttl <- wid[m$seqID];
pvl <- m$pvalue;
len <- max(nchar(m$seq));
PlotPWMMatchPosition(pos, ttl, pvl, len);
title(main=nm, cex=2);
}) -> x;
?GADEM
?"GRanges"
matchPWM
?matchPWM
prms$GADEM$nmotifs
prms$GADEM$numEM
plot(BLANK)
frame()
text(0.5, 0, 'ABC')
par()
frame();
text(0.5, 0, pos=3, text='No motif found', cex=2);
text(0.5, 0, pos=3, label='No motif found', cex=2);
frame();
text(0.5, 0, pos=3, label='No motif found', cex=2);
par(mar=c(1,1,1,1));
frame();
text(0.5, 0, pos=3, label='No motif found', cex=2);
par(mfrow=c(1,1))
par(mar=c(1,1,1,1));
frame();
text(0.5, 0, pos=3, label='No motif found', cex=2);
prms$GADEM$pValue
format(prms$GADEM$pValue)
prms$GADEM$maskR
available.genomes()
dir()
gr <- readRDS('grange.rds')
gr
x <- readRDS('promoters.rds')
x
names(x)
library(RoCA)
CreateReport('rGADEM.yaml')
DownloadFile('https://github.com/zhezhangsh/RoCA/blob/master/data/genomic.region/promoter_interferon.rds?raw=true', getwd())
dir()
file.remove('promoter_interferon.rds?raw=true')
CreateReport('rGADEM.yaml')
seq <- ImportVector(DownloadFile('https://github.com/zhezhangsh/RoCA/blob/master/data/genomic.region/promoter_interferon.rds', path.input));
seq <- ImportVector(DownloadFile('https://github.com/zhezhangsh/RoCA/blob/master/data/genomic.region/promoter_interferon.rds', getwd()));
dir()
ImportVector('promoter_interferon.rds')
CreateReport('rGADEM.yaml')
name.yaml <- 'rGADEM.yaml';
name.packages <- c('rmarkdown', 'knitr', 'yaml', 'DT', 'htmlwidgets', 'GenomicFeatures', 'rGADEM',
'RoCA', 'awsomics', 'Agri');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table'); # <full.path.to.subfolder>=<subfolder.name>
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE);
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
tp <- yml$input$seq$type[1];
tp
tp=='character'
tp <- yml$input$seq$type[1];
if (tp == 'DNAStringSet') {
seq <- ImportR(DownloadFile(yml$input$seq$file, path.input));
} else if (tp == 'character') {
seq <- ImportVector(DownloadFile(yml$input$seq$file, path.input));
seq <- DNAStringSet(seq);
} else if (tp == 'GRanges' | tp == 'bed') {
if (exists('rng')) rm(rng);
if (tp == 'GRanges') rng <- ImportR(DownloadFile(yml$input$seq$file, path.input)) else {
bed <- ImportTable(DownloadFile(yml$input$seq$file, path.input), rownames = FALSE, colnames = FALSE);
if (ncol(bed) >= 6) str <- as.vector(bed[, 6]) else str <- rep('*', nrow(bed));
rng <- GRanges(bed[, 1], IRanges(bed[, 2], bed[, 3]), strand=str);
if (ncol(bed) >= 4) names(rng) <- as.vector(bed[, 4]) else names(rng) <- paste('Seq', 1:length(rng), sep='_');
}
require(yml$input$reference, character.only = TRUE);
gname <- strsplit(yml$input$reference, '\\.')[[1]][2];
assign('gnm', get(gname));
genome(rng) <- genome(gnm);
seq <- getSeq(gnm, rng);
} else {
stop("No input sequences.\n");
}
DownloadFile('https://raw.githubusercontent.com/zhezhangsh/RoCA/master/data/genomic.region/promoter_interferon.rds', getwd())
CreateReport('rGADEM.yaml')
dir()
library(RoCA)
CreateReport('rGADEM.yaml')
CreateReport('rGADEM.yaml')
CreateReport('rGADEM.yaml')
CreateReport('rGADEM.yaml')
CreateReport('rGADEM.yaml')
