# <!-- ==========================================================================================================
# RoCA framework        : RoCA is a paradigm of reproducible data analysis for bioinformaticians to share their 
#                         custom analysis procedure. It creates dynamic data analysis reports based on R markdown
#                         templates. Visit [RoCA home](http://zhezhangsh.github.io/RoCA) for more information.
# R markdown template   : An .Rmd document that includes both R code and documentation of a data 
#                         analysis procedure. It generates dynamic report according to user-specific 
#                         input data and parameters for each analysis.
# YAML key-value pairs  : The pairs are specifications of each analysis performed using the R Markdown 
#                         template. They are formatted and saved together as a [YAML file](http://www.yaml.org). 
#                         It is highly recommended to pair each R markdown template with a YAML file having the 
#                         same file name. 
# Knitr report          : Data analysis report in HTML, PDF, or Word file, generated by the [knitr tool]
#                         (http://yihui.name/knitr) for each analysis, based on the R markdown template and 
#                         the YAML specifications.
# Developer             : who implements the analysis procedure through an R markdown template           
#                         and provides introduction and examples about how to set up an analysis         
# Analyst               : who specifies the input data and parameters for each analysis via a yaml file  
# ==========================================================================================================  -->

####################################################################################################
# Developers describes here how to set up the analysis implemented via the R markdown template,     
# especially how to prepare the input data, such as format, row names, and file type (R, text, etc.)
####################################################################################################

###################################################################
#########################    REQUIRED    ##########################
###################################################################
# Required by the RoCA framework to generate a reproducible report

# <!-- ============================================================
# Fixed fields required by the RoCA framework to generate a report.
# Neither developers nor analysts should change the keys,
# but the values should be specified for each analysis.
# ============================================================= -->

template: https://raw.githubusercontent.com/zhezhangsh/RoCA/master/template/demo/skeleton/skeleton.Rmd
output: examples/just_skeleton            # Where to save the output files
home: https://github.com/zhezhangsh/RoCA  # Location to project home (URL or local file)
analyst: Jim Zhang                        # Name of the analyst who runs this analysis
zip: no                                   # Whether to zip the output folder

###################################################################
##########################    ABOUT    ############################
###################################################################
# Analyst describes the analysis to run, such as project title

# <!-- ============================================================
# Text description of each analysis to be included in the report.
# Analysts can specify any key-value pairs for each analysis.
# The RoCA framework will create a section for them in the report. 
# Common keys are project, experiment, analysis, etc.
# ============================================================= -->

description:    
  Project: Reporting of Custom Analysis
  Analysis: Just a skeleton for developer to write their own Rmd templates

###################################################################
########################    INPUT DATA    #########################
###################################################################
# Location (local or URL) of files with formatted input data

# <!-- ============================================================
# This section requires the most attention to set up an analysis.
# Developer need to describe in details how to prepare the data,
# as well as provide working examples.
# Developer also decides the acceptable data format and file type.
# Read RoCA instruction to learn more about importing files. 
# ============================================================= -->

input:    
  genome: 
  bam:
  range:
  
parameter:
  # ==========================================================================================================================
  # GmapGenome(genome, directory = GmapGenomeDirectory(create = create), 
  #             name = genomeName(genome), create = FALSE, ...):
  # 
  # Creates a GmapGenome corresponding to the genome argument, 
  # which may be either a string identifier of the genome within directory, 
  # a FastaFile or DNAStringSet of the genome sequence, or a BSgenome object.
  # ==========================================================================================================================
  GmapGenome:
    genome:     # a string identifier of the genome within <directory>, a <FastaFile>, <DNAStringSet> or a <BSgenome> object.
    directory:  # <directory/genome> when <genome> is a string will specify the full directory of genome index files.
    name:       # key to existing genome index within <directory> (sub-directory name) when <genome> is a string
    create: no  # create the genome index using a <FastaFile>, <DNAStringSet> or a <BSgenome> object within <directory/name>
  
  # ==========================================================================================================================
  # TallyVariantsParam(genome, read_pos_breaks = NULL, high_base_quality = 0L, minimum_mapq = 13L, 
  #                     variant_strand = 1L, ignore_query_Ns = TRUE, ignore_duplicates = TRUE,  mask = GRanges(),
  #                     keep_extra_stats = TRUE, read_length = NA_integer_, ...)
  # 
  # Tallies the bases, qualities and read positions for every genomic position in a BAM file. 
  # By default, this only returns the positions for which an alternate base has been detected. 
  # The typical usage is to pass a BAM file, the genome, the (fixed) readlen 
  # and (if the variant calling should consider quality) an appropriate high_base_quality cutoff. 
  # Passing a which argument allows computing on only a subregion of the genome.
  # ==========================================================================================================================
  
  TallyVariantsParam:
    ## genome ## - output of the GampGenome() call
    read_pos_breaks:         # The breaks used for tabulating the read positions 
    high_base_quality: 0     # The minimum cutoff for whether a base is counted as high quality. 
    minimum_mapq: 20         # Minimum MAPQ of a read
    variant_strand: 1        # Highly recommended to set this to at least 1
    ## ignore_query_Ns ## - Usually, there is no reason to set this to FALSE, always use default
    ignore_duplicates: yes   # Whether to ignore reads flagged as PCR/optical duplicates
    ## mask ## - All variants falling within the mask are discarded, always use default
    keep_extra_stats: yes    # The extra statistics are most useful for algorithm diagnostics and development.
    read_length:             # The expected read length
    
  callVariants:
    ## x ## - List of BAM files
    ## tally.param ## - Output of the TallyVariantsParam() call
  
  
    
###################################################################
########################    PARAMETERS    #########################
###################################################################
# Parameters to run this analysis

parameter: # These are examples of different types of parameters. They will not be used for the skeleton.Rmd template for act analysis.
  test: wilcox      # The name of the statistic test for some analysis
  threshold: 1.0    # The cutoff value for some selection
  impute: yes       # Whether to perform some kind of imputation of missing values
  range:            # The range for some kind of filtering of a variable
  - 0.0
  - 100.0
  statistics:       # Whether to include selected statistics in the results
    correlation: no
    pvalue: yes
    fdr: yes
    fwer: no
    

######################    END OF DOCUMENT    ######################


