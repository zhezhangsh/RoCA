qp <- pchisq(stat[, 6], stat[, 7], lower.tail = TRUE, log.p = TRUE);
qp[stat[,7]==0 | is.na(qp)] <- 0;
qp <- exp(qp);
summary(qp)
devtools::install_local('~/Documents/DEGandMore')
library(hydroGOF)
install.packages('hydroGOF')
library(hydroGOF)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ts <- readRDS(fns[i0])$Y;
p  <- yml$parameter$dbscan;
mn <- yml$parameter$Optimization$dbscan$min;
mx <- yml$parameter$Optimization$dbscan$max;
pt <- mn:mx;
db <- lapply(pt, function(i) {
dbscan <- OptimizeDBSCAN(ts, minPts = i, search = p$search, bucketSize = p$bucketSize,
splitRule = p$splitRule, approx = p$approx);
});
sc <- sapply(db, function(db) {
s <- silhouette(db$cluster, dist(ts));
if (identical(NA, s)) 0 else mean(s[, 3]);
});
db <- db[sc==max(sc)];
db <- db[[length(db)]];
cl <- db$cluster;
c0 <- paste('Cluster', sort(unique(cl)), sep='_');
sil <- silhouette(cl, dist(ts));
sil <- cbind(cluster=sil[, 1], neighbor=sil[, 2], score=sil[, 3]);
rownames(sil) <- rownames(d);
colnames(ts)  <- paste('ts', 1:ncol(ts), sep='_');
res <- cbind(sil, ts);
write.table(data.frame(id=rownames(res), res, stringsAsFactors = FALSE), row.names = FALSE,
paste(path.tbl, 'dbscan_classification.txt', sep='/'), quote = FALSE, sep = '\t');
c <- sil[, 1];
x <- max(res[, 1]);
n <- sapply(0:x, function(i) length(c[c==i]));
s <- sapply(0:x, function(i) res[c==i, 3]);
b <- sapply(0:x, function(i) paste(sort(unique(res[res[, 1]==i, 2])), collapse=';'));
smm <- sapply(s, summary);
smm <- t(smm);
colnames(smm) <- paste('Width', colnames(smm), sep='_');
colnames(smm) <- gsub('[ \\.]', '', colnames(smm));
tbl <- data.frame(Cluster_ID=paste('Cluster', 0:max(res[, 1]), sep='_'), N = n, Neighbors = b,
smm[, c(4, 3, 1, 2, 5, 6)], stringsAsFactors = FALSE);
tbl <- FormatNumeric(tbl);
sc
length(pt)
pt
sc
dbscan[[1]]
db
pt
length(db)
length(pt)
class(db)
db <- lapply(pt, function(i) {
dbscan <- OptimizeDBSCAN(ts, minPts = i, search = p$search, bucketSize = p$bucketSize,
splitRule = p$splitRule, approx = p$approx);
});
db
db
sc
barplot(sc)
names(sc) <- pt;
plot_ly(x=names(sc), y=sc)
plot_ly(x=names(sc), y=sc, type='bar')
names(sc) <- pt %>% layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
plot_ly(x=pt, y=sc) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
plot_ly(x=pt, y=sc, type='bar') %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
plot_ly(x=as.character(pt), y=sc, type='bar') %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
plot_ly(x=as.character(pt), y=sc, type='bar', color=rainbow(4)) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
mk <- list(color=rainbow(length(pt)));
plot_ly(x=as.character(pt), y=sc, type='bar', marker=mk) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
cl <- rep("rgb(49,130,189)", length(pt));
cl[sc==max(sc)] <- "rgb(189,130,49)";
plot_ly(x=as.character(pt), y=sc, type='bar', marker=list(color=cl)) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
cl <- rep("rgb(49,130,189)", length(pt));
cl[sc==max(sc)] <- "rgb(189,130,0)";
plot_ly(x=as.character(pt), y=sc, type='bar', marker=list(color=cl)) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
cl <- rep("rgb(49,130,189)", length(pt));
cl[sc==max(sc)] <- "rgb(189,0,0)";
plot_ly(x=as.character(pt), y=sc, type='bar', marker=list(color=cl)) %>%
layout(xaxis=list(title='Minimum cluster size'), yaxis=list(title='Silhouette score'));
sc
?silhouette
sil
?Rtsne
library(data.table)
install.packages(data.table)
install.packages("data.table")
install.packages("data.table")
library(ff)
ls()
dim(e)
dim(b)
di(d)
dim(d)
d <- t(d)
ff <- as.ff(d, 'test_ff')
ff
str(ff)
saveRDS(ff, 'test_ff.rds')
rm(ff)
dir()
file.info('test_ff')
file.info('test_ff.rds')
ff <- readRDS('test_ff.rds')
dim(ff)
f[1:2, ]
ff[1:2, ]
x <- colnames(ff)
ff[, x[3:4]]
rowMeans(ff)->x
prms$Rtsne$pca
prms$Rtsne$perplexity
prms$Rtsne$dims
prms$Rtsne$theta
prms$Optimization$tsne
runApp()
?dbscan
OptimizeDBSCAN
source('~/.active-rstudio-document', echo=TRUE)
?dbscan
?Rsne
?Rtsne
?dbscan
data(iris)
iris <- as.matrix(iris[,1:4])
kNNdist(iris, k=4, search="kd")
kNNdistplot(iris, k=4)
prms$dbscan$search
pt
str(db)
?silhouette
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), color='white', xref='x', yref='y', showarrow=FALSE);
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl); ``
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), color='white', xref='x', yref='y', showarrow=FALSE);
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl);
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
ps[[]]
ps[[1]]
ps[[1]]
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), xref='x', yref='y', showarrow=FALSE, font = list(color = '#FFFFFF'));
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl);
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
ps[[1]]
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), xref='x', yref='y', showarrow=FALSE, font = list(color = '#FFFFFF'));
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl);
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
ps[[1]]
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), xref='x', yref='y', showarrow=FALSE, font = list(color = '#00FF00', family = 'sans serif', size = 14));
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl);
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
ps[[1]]
if (!identical(NA, g) & !identical(NULL, g) & ncol(g)>0) {
asso <- lapply(colnames(g), function(nm) CrossClass(cl, g[, nm]));
names(asso) <- colnames(g);
exp <- lapply(asso, function(x) x$expected[, c0]);
obs <- lapply(asso, function(x) x$observed[, c0]);
rat <- lapply(asso, function(x) (x$observed/x$expected)[, c0]);
fn1 <- sapply(names(exp), function(nm) {
f <- paste('expected_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(exp[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn2 <- sapply(names(obs), function(nm) {
f <- paste('observed_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(obs[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
fn3 <- sapply(names(rat), function(nm) {
f <- paste('ratio_cluster2', nm, '.html', sep='');
CreateDatatable(FormatNumeric(rat[[nm]]), paste(path.tbl, f, sep='/'), caption=paste('Cluster', nm, sep=' vs. '));
paste('[Table](', paste('table', f, sep='/'), ')', sep='');
});
tbl <- cbind(sapply(obs, nrow), sapply(asso, function(x) x$stats$rand), sapply(asso, function(x) x$stats$crand),
sapply(asso, function(x) x$chisq$statistic), sapply(asso, function(x) x$chisq$p.value));
tbl <- FormatNumeric(data.frame(names(asso), tbl, stringsAsFactors = FALSE));
tbl <- cbind(tbl, fn1, fn2, fn3);
colnames(tbl) <- c('Feature', 'Num_Group', 'Rand', 'C_Rand', 'ChiSq', 'P_ChiSq',
'Count_Expected', 'Count_Observed', 'Obs/Exp');
ps <- lapply(1:nrow(tbl), function(i) {
b <- rat[[i]];
c <- obs[[i]];
n <- rowSums(c);
b <- b[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
c <- c[n>=(0.1*sum(c)/nrow(c)), , drop=FALSE];
r1 <- cor(b);
r2 <- cor(t(b));
r1[is.na(r1)] <- 0;
r2[is.na(r2)] <- 0;
j <- hclust(as.dist(1-r1))$order;
k <- hclust(as.dist(1-r2))$order;
b <- b[k, j];
c <- c[k, j];
x <- rep(1:ncol(c), each=nrow(c))-1;
y <- rep(1:nrow(c), ncol(c))-1;
a <- list(x=x, y=y, text=as.vector(c), xref='x', yref='y', showarrow=FALSE, font = list(color = '#00FF00', family = 'sans serif', size = 14));
xa <- list(title='', tickangle = -45, tickmode = 'array', tickvals = (1:ncol(c))-1, ticktext = colnames(c));
ya <- list(title='', tickangle = 0,   tickmode = 'array', tickvals = (1:nrow(c))-1, ticktext = rownames(c));
mr <- list(t = 40, l = 10+8*max(nchar(rownames(c))), b = 10+7.5*max(nchar(colnames(c))));
tt <- paste('Cluster', rownames(tbl)[i], sep=' vs. ');
p <- plot_ly(z=b, colors=colorpanel(128, '#4488FF', '#FF4444')) %>%
layout(annotations=a, xaxis=xa, yaxis=ya, margin=mr, title=tt);
});
names(ps) <- rownames(tbl);
res <- list(expected=exp, observed=obs, ratio=rat, plot=ps);
saveRDS(res, paste(path.fig, 'result_association.rds', sep='/'));
ln <- '';
} else {
ln <- '**No known sample feature is available. Ignore the rest of this section.**';
ps <- list();
tbl <- NULL;
}
ps[[1]]
getwd()
q()
