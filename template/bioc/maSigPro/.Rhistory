barplot(m[8, ], las=3)
barplot(m[9, ], las=3)
barplot(m[10, ], las=3)
dim(ms)
d <- ms[, 5:8]-ms[, 1:4]
boxplot(data.frame(d))
dim(d)
plot(density(d))
lines(density(d[, 1]))
plot(density(d[, 1]))
lines(density(d[, 2]), col=2)
lines(density(d[, 3]), col=3)
lines(density(d[, 4]), col=4)
source("https://bioconductor.org/biocLite.R")
biocLite("maSigPro")
library("maSigPro", lib.loc="~/Library/R/3.2/library")
install_url('http://bioconductor.org/packages/release/bioc/src/contrib/maSigPro_1.46.0.tar.gz')
devtools::install_url('http://bioconductor.org/packages/release/bioc/src/contrib/maSigPro_1.46.0.tar.gz')
devtools::install_url('https://cran.rstudio.com/src/contrib/venn_1.2.tar.gz')
devtools::install_url('http://bioconductor.org/packages/release/bioc/src/contrib/maSigPro_1.46.0.tar.gz')
source("https://bioconductor.org/biocLite.R")
biocLite("maSigPro")
detach("package:maSigPro", unload=TRUE)
library("maSigPro", lib.loc="~/Library/R/3.2/library")
library(maSigPro)
maSigPro::make.design.matrix
install.packages("XQuartz")
maSigPro::make.design.matrix
source("https://bioconductor.org/biocLite.R")
biocLite("maSigPro")
library(maSigPro)
dim(m)
dim(ms)
dff <- ms[, 5:8] - ms[, 1:4]
dim(dff)
x <- dff[dff[, 1]>1, ]
y <- dff[dff[,1] < -1, ]
dim(x)
dim(y)
z <- dff[dff[,1]> -1 & dff[,1]<1, ]
dim(z)
boxplot(data.frame(x))
colMeans(x)
colMeans(y)
a <- dff[dff[,4]>1, ]
dim(a)
apply(dff, 2, function(x) length(x[x>1]))
apply(dff, 2, function(x) length(x[x< -1]))
dim(expr)
e1 <- expr[, grep('_D8', colnames(expr))]
dim(e1)
e2 <- expr[, grep('_D12', colnames(expr))]
e <- cbind(e1, e2)
plot(hclust(as.dist(1-cor(e))))
library("maSigPro", lib.loc="~/Library/R/3.2/library")
data(data.abiotic)
data(edesign.abiotic)
edesign.abiotic
> design <- make.design.matrix(
edesign.abiotic
smp
smpl
?maSigPro
edesign.abiotic
dim(e)
dim(e1)
dim(e2)
expr[1, ]
e1 <- expr[, seq(1, ncol(expr), 2)]
e2 <- expr[, seq(2, ncol(expr), 2)]
e <- e1/2+e2/2
dim(e)
head(e)
colnames(e) <- sub("_1_", '_', colnames(e))
e[1:2, ]
dim(e)
smp
s
dir()
smp <- readRDS('sample.rds')
smp
smp <- smp[seq(1, nrow(smp), 2), ]
smp
s
s <- smp
s
rownames(s) <- sub('_1_', '_', rownames(s))
s
s <- s[, 1]
s
s <- smp
rownames(s) <- sub('_1_', '_', rownames(s))
s
s <- s[, -1]
s
edesign
library(maSigPro)
data(data.abiotic)
data(edesign.abiotic)
edesign.abiotic
s
s <- s[, c(4, 3, 2, 1)]
s
names(s)
names(s)[1] <- 'Time'
s[, 2]
s[, 2] <- rep(1:8, c(4,4,4,4,3,3,3,3))
s
s <- s[, -3]
s
make.design.matrix(s)
s[, 2]
s$Control <- rep(1:0, c(16, 12))
s$CDL <- rep(0:1, c(16, 12))
s
s <- s[, -3]
s
?maSigPro
dis <- make.design.matrix(s)
ma <- maSigPro(e, dis)
dis
names(edesign.abiotic)
names(edesign)
edesign
data.abiotic
data.abiotic->x
dim(x)
head(x)
colnames(x)
dim(e)
colnames(e)
s[colnames(e), ]
ma <- maSigPro(e, dis)
ma <- maSigPro(e, s)
str(ma)
ma$groups
ma$G
ma$g
str(ma)
dir()
dim(e)
m <- rowMeans(e[, 1:4])
e <- apply(e, 2, function(e) e-m)
dim(m)
dim(e)
e <- apply(e, 1, function(e) e/sd(e))
dim(e)
e <- t(e)
s
s <- s[, c(1,2,4,3)]
ma <- maSigPro(e, s, Q = 0.01)
names(ma)
str(ma$variables)
ma$cluster.algorithm.used
ma$sig.genes
ma$sig.genes->sig
length(sig)
names(sig)
x <- sig[[1]]
x
names9x
names(x)
x[[1]]
dim(x[[1]])
head(x[[1]])
cl <- x[[1]]
dim(cl)
table(cl)
s
names(sig)
536+771+706+396+922+715+116+141+141
a <- sig[[2]]
names(a)
a[[4]]
dim(a[[1]])
b <- a[[1]]
dim(b)
table(b[, 29])
b[1:2, ]
ms <- sapply(1:9, function(i) colMeans(b[b[, 29]==i, -29]))
dim(ms)
head(ms)
ms <- t(ms)
head(ms)
heatmap(ms)
library(awsomics)
PlotColoredBlock(ms)
dim(ms)
s
g
smp
x <- unique(smp[, 1])
g <- lapply(x, function(x) rownames(s)[smp[,1]==x])
g
ms
dim(ms)
m <- sapply(1:9, function(i) sapply(g, function(g) mean(ms[i, g])))
m
rownames(m) <- x
m
plot(c(1:4, 1:4), m[, 2])
par(mar=c(5,5,2,2))
plot(c(1:4, 1:4), m[, 2])
x <- sig[[2]]
dim(x)
names(x)
y <- x[[1]]
rownames(y)[y[, 29]==2]
rownames(y)[y[, 29]==2]->z
paste(z, collapse=';')
rownames(y)[y[, 29]==1]->z
paste(z, collapse=';')
rownames(y)[y[, 29]==6]->z
z
paste(z, collapse=';')
y <- sig[[1]]
names(y)
y <- y[[1]]
rownames(y)[y[, 29]==6]->z
z
z <- paste(z, collapse=';')
z
rownames(y)[y[, 29]==1]->z
z
z <- paste(z, collapse=';')
z
x <- sig[[1]][[1]]
dim(x)
table(x[, 29])
rownames(x)[x[, 29]==1]->z
length(z)
rownames(x)[x[, 29]==5]->z
z
paste(z, collapse=';')
dir()
saveRDS(ma, 'masigpro.rds')
z <- split(rownames(y), y[, 29])
str(z)
paste(z[[9]], collapse=';')
sapply(z, length)
sum(sapply(z, length))
dim(sig[[1]][[1]])
dim(sig[[2]][[1]])
z <- split(rownames(sig[[2]][[1]]), sig[[2]][[1]][, 29])
str(z)
paste(z[[9]], collapse=';')
paste(z[[2]], collapse=';')
str(z)
paste(z[[4]], collapse=';')
ids <- lapply(sig, function(x) rownames(x[[1]]))
str(ids)
intersect(ids[[1]], ids[[2]])
str(ids)
str(z)
a <- colMeans(e[z[[1]], ])
length(a)
r <- cor(a, t(e))
dim(r)
r <- r[1, ]
hist(r)
plot(density(r))
length(r[r>.9])
str(z)
length(r[r>.8])
length(r[r>.85])
a <- rownames(e)[r>.85]
a
b <- colMeans(e[a, ])
b
barplot(b)
dim(ms)
dim(m)
b
g
c <- sapply(g, function(g) mean(b[g]))
c
barplot(c)
plot(rep(1:4, 2), c)
barplot(as.matrix(c, nr=2))
barplot(as.matrix(c, nr=2), be=T)
barplot(t(as.matrix(c, nr=2)), be=T)
barplot(as.matrix(c, nr=2), be=T)
barplot(as.matrix(c, nc=2), be=T)
c
d <-rbind(c[1:4], c[5:8])
d
barplot(d, be=T)
a
paste(a, collapse=';')
dim(e)
ma <- maSigPro(e, s)
saveRDS(ma, 'masigpro.rds')
names(ma)
sig <- ma$sig.genes
names(sig)
dim(sig[[1]][[1]])
dim(sig[[2]][[1]])
sd(e[1,])
getwd()
setwd('~/Documents/RoCA/data/gex')
dir()
setwd('circadian_rhythm/')
dir()
smp <- readRDS('sample.rds')
dim(smp)
smp
dir()
expr <- readRDS('expr.rds')
dim(expr)
sd <- apply(expr, 1, sd)
hist(sd)
summary(sd)
length(sd[sd>0.05])
e <- expr[sd>0.05, ]
dim(e)
dim(smp)
setwd('~/Documents/RoCA/template/bioc/')
dir.create('maSigPro')
saveRDS(e, 'expr_high_variance.rds')
dim(s)
s
smp
dim(s)
dim(smp)
smp <- smp[c(37:72, 1:36), ]
smp
df <- data.frame(Time=smp[, 4], Replicate=rep(1:24, each=3))
df
rownames(df) <- rownames(smp)
df
?maSigPro
data(edesign.abiotic)
edesign.abiotic
df
df$WT <- rep(1:0, each=36)
df$KO <- rep(0:1, each=36)
df
saveRDS(df, 'masigpro_design.rds')
dir()
setwd('maSigPro/')
dir()
dim(e)
smp
dim(smp)
dim(e)
ma <- maSigPro(e, smp)
library(maSigPro)
dim(e)
ma <- maSigPro(e, df)
d <- e - rowMeans(e)
dim(d)
mean(d[1, ])
ma <- maSigPro(d, df)
dim(expr)
dim(d)
d <- apply(expr, 2, function(x) x-rowMeans(expr))
dim(d)
d <- apply(d, 1, function(d) d/sd(d))
d <- t(d)
dim(d)
d
dim(d)
df
d <- d[, rownames(df)]
ma <- maSigPro(d, df)
dim(e)
dim(d)
df
f1 <- as.factor(df[, 1])
f2 <- as.factor(df[, 4])
f2
aov <- lapply(d, 1, function(d) summary(aov(d~f1*f2)))
aov <- apply(d, 1, function(d) summary(aov(d~f1*f2)))
x<-aov[[1]]
x
x[1:3, 5]
x[[1]][1:3, 5]
p <- sapply(aov, function(x) x[[1]][1:3, 5])
dim(p)
p <- t(p)
hist(p[, 1], br=100)
hist(p[, 2], br=100)
hist(p[, 3], br=100)
q <- apply(p, 2, function(p) p.adjust(p, method='BH'))
dim(q)
nrow(q[q<0.05, ])
dim(q[q<0.05, ])
dim(q)
dim(q[q[, 1]<0.05, ])
sig <- ma$sig.genes
dim(sig[[1]][[1]])
df
dim(sig[[2]][[1]])
ma <- maSigPro(d, df, degree = 3)
sig <- ma$sig.genes
length(sig)
dim(sig[[1]][[1]])
dim(sig[[2]][[1]])
str(ma)
names(ma)
x <-sig[[1]]
names(x)
x[[4]]
dim(x[[4]])
head(x[[4]])
names(a)
names(ma)
ma$g
ma$G
ma$summary
ma$p.vector
ma$p.vector->a
dim(a)
hist(a, br=100)
names(ma)
ma$groups
names(ma)
ma[[16]]
?maSigPro
ma <- maSigPro(d, df, degree = 3, vars = 'all')
x <- readRDS('https://raw.githubusercontent.com/zhezhangsh/RoCA/master/data/gene.set/human.rds')
?readRDS
x <- readRDS('~/Downloads/human.rds')
names(x)
x[[2]][1:2]
library("TxDb.Hsapiens.UCSC.hg19.knownGene", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ex <- exons(TxDb.Hsapiens.UCSC.hg38.knownGene)
detach("package:TxDb.Hsapiens.UCSC.hg19.knownGene", unload=TRUE)
library("TxDb.Hsapiens.UCSC.hg38.knownGene", lib.loc="~/Library/R/3.2/library")
ex <- exons(TxDb.Hsapiens.UCSC.hg38.knownGene)
ex[1:2]
?exons
ex <- exons(TxDb.Hsapiens.UCSC.hg38.knownGene, columns=c('exon_id', 'gene_id'))
ex[1:2]
len <- width(ex)
ex <- exons(TxDb.Hsapiens.UCSC.hg38.knownGene, columns=c('exon_id', 'tx_id', 'gene_id'))
ex[1:2]
ex <- exons(TxDb.Hsapiens.UCSC.hg38.knownGene, columns=c('exon_id', 'tx_id', 'tx_name'))
ex[1:3]
txdb <- (TxDb.Hsapiens.UCSC.hg38.knownGene
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
x <- transcriptLengths(txdb)
head(x)
len <- split(x[[5]], x[[3]])
len <- sapply(len, mean)
summary(len)
length(len)
head(len)
lst <- x[[2]]
length(ls)
length(lst)
a <- unlist(lst, use.names=FALSE)
b <- rep(names(lst), sapply(lst, length))
b <- b[a %in% names(len)]
a <- a[a %in% names(len)]
c <- len[a]
head(c)
head(a)
head(b)
a <- unlist(lst, use.names=FALSE)
head(a)
x <- readRDS('~/Downloads/human.rds')
lst <- x[[2]]
a <- unlist(lst, use.names=FALSE)
b <- b[a %in% names(len)]
head(a)
head(b)
b <- rep(names(lst), sapply(lst, length))
b <- b[a %in% names(len)]
a <- a[a %in% names(len)]
head(a)
c <- len[a]
d <- split(c, b)
length(d)
l <- sapply(d, mean)
summary(l)
length(l[l>=10000])
y <- names(l[l>=10000])
head(y)
x[[1]][y, ]
y <- names(l[l>=5000])
length(y)
z <- x[[1]][y, ]
z[1:2, ]
z[z$Size>=100, ]
z[z$Size>=50, ]
z[z$Size>=20, ]
z[z$Size>=20, ]->z
table(z[, 1])
z[z[,1]=='BioSystems', ]
y <- names(l[l>=10000])
y
x[[1]][y[1:3], ]
y <- names(l[l>=8000])
y
x[[1]][y[1:10], ]
y <- names(l[l>=5000])
z <- x[[1]][y, ]
table(z[[1]])
v <- z[z[[1]]=='KEGG', ]
z <- z[z$Size>=20, ]
dim(z)
table(z)
z
z[, 2]
z[, 3]
z[5, ]
len['490482']
d['490482']
d['490482'][[1]]
mean(d['490482'][[1]])
z[5, ]
