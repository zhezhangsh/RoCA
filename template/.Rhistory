k
nnn[p==min(p), ]->z
phyper(z[1], z[1]+z[2], z[3]+z[4], z[1]+z[2], lower.tail = FALSE)
phyper(z[1], z[1]+z[2], z[3]+z[4], z[1]+z[2], lower.tail = TRUE)
fisher.test(matrix(z, nr=2), alternative = 'greater')
z
m
n
x
or
pnhyper(x, or, upper.tail = TRUE)
min(p)
x
or
q <- 8
phyper(x-1, m, n, k)
phyper(x-1, m, n, k, FALSE)
x
fsh <- apply(nnn, 1, function(n) fisher.test(matrix(n, nr=2), alternative = 'greater'));
m
z
n
n
k
pfs <- phyper(n11, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
summary(pfs)
x <- e^pfs
x <- exp(pfs)
min(x)
fsh <- apply(nnn, 1, function(n) fisher.test(matrix(n, nr=2), alternative = 'greater'));
nnn[pfs==min(pfs), ]
nnn[pfs==max(pfs), ]
pfs <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
summary(pfs)
x <- exp(pfs)
min(x)
plot(x, p)
cor(x, p)
table(x==p)
x!=p
x[x!=p]
p[x!=p]
p[x!=p]l[1]
p[x!=p][1]
x[x!=p][1]
?chisq.test
pchisq()
?pchisq
chisq.test(matrix(z, nr=2))
?chisq.test
chisq.test
x <- matrix(z, nr=2)
y = NULL;
correct = TRUE;
p = rep(1 / length(x); length(x));
rescale.p = FALSE;
simulate.p.value = FALSE;
B = 2000
p = rep(1 / length(x), length(x));
p
chisq.test(matrix(z, nr=2))$p.value
p1 <- apply(nnn, function(z) chisq.test(matrix(z, nr=2))$p.value)
p1 <- apply(nnn, 1, function(z) chisq.test(matrix(z, nr=2))$p.value)
cor(p, p1)
summary(p)
p2 <- apply(nnn, 1, function(z) fisher.test(matrix(z, nr=2))$p.value)
cor(p1, p2)
plot(p1, p2)
plot(p1, p2, log='xy')
cor(p1, p2, method='spearman')
args(cor)
cor(p1, p2, method='pearson')
DNAME <- deparse(substitute(x))
if (is.data.frame(x))
x <- as.matrix(x)
if (is.matrix(x)) {
if (min(dim(x)) == 1L)
x <- as.vector(x)
}
METHOD <- "Pearson's Chi-squared test"
nr <- as.integer(nrow(x))
nc <- as.integer(ncol(x))
is.na(nr) || is.na(nc) || is.na(nr * nc)
sr <- rowSums(x)
sc <- colSums(x)
E <- outer(sr, sc, "*") / n
v <- function(r, c, n)
c * r * (n - r) * (n - c) / n ^ 3
V <- outer(sr, sc, v, n)
dimnames(E) <- dimnames(x)
simulate.p.value && all(sr > 0) && all(sc > 0)
simulate.p.value
correct && nrow(x) == 2L && ncol(x) == 2L
YATES <- min(0.5, abs(x - E))
YATES
is.na(nr) || is.na(nc) || is.na(nr * nc)
z
matrix(z, nr=2)
ns <- z
sr <- c(ns[1]+ns[3], ns[2]+n[4]);
sc <- c(ns[1]+ns[2], ns[3]+n[4]);
E <- outer(sr, sc, "*") / rowSums(nnn);
sr
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
E <- outer(sr, sc, "*") / rowSums(nnn);
sr
sc
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
E <- outer(sr, sc, "*") / sum(ns);
E
simulate.p.value && all(sr > 0) && all(sc > 0)
YATES <- min(0.5, abs(x - E))
YATES <- min(0.5, abs(ns - E))
YATES
chi <- apply(nnn, 1, function(ns) {
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
y <- min(0.5, abs(ns - e));
sum((abs(ns - e) - y) ^ 2 / e);
});
summary(chi)
min(chi)
z
chi[p1==min(p1)]
chi[p2==min(p2)]
chisq.test(matrix(z, nr=2))
pvl <- pchisq(chi, df=1, lower.tail = FALSE);
min(pvl)
pvl <- pchisq(chi, df=1, lower.tail = TRUE);
min(pvl)
max(chi)
nnn[chi==max(chi)]
pchisq(14.952, 1)
pchisq(14.952, 1, lower.tail = TRUE)
pchisq(14.952, 1, lower.tail = FALSE)
pvl <- pchisq(chi, df=1, lower.tail = FALSE);
min(pvl)
nnn[pvl==min(pvl), ]
nnn[pvl==min(pvl), ]->v
chisq.test(matrix(v, nr=2))
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pvl <- exp(pvl);
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pvl <- exp(pvl);
system.time({pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pvl <- exp(pvl);})
system.time({        chi <- apply(nnn, 1, function(ns) {
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
y <- min(0.5, abs(ns - e));
sum((abs(ns - e) - y) ^ 2 / e);
});
pvl <- pchisq(chi, df=1, lower.tail = FALSE, log.p=TRUE);
pvl <- exp(pvl); })
sr <- c(nnn[, 1]+nnn[, 3], nnn[, 2]+nnn[, 4]);
sc <- c(nnn[, 1]+nnn[, 2], nnn[, 3]+nnn[, 4]);
e <- outer(sr, sc, "*") / rowSums(nnn);
summary(sr)
summary(sc)
summary(e)
length(e)
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
e
system.time({        chi <- apply(nnn, 1, function(ns) {
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
y <- min(0.5, abs(ns - e));
sum((abs(ns - e) - y) ^ 2 / e);
});
pvl <- pchisq(chi, df=1, lower.tail = FALSE, log.p=TRUE);
pvl <- exp(pvl); })
summary(pvl)
nnn[pvl==max(pvl), ]
length(gns)
nnn[1, ]
?prop.test
z
prop.test(c(8, 158), c(8+81, 158+6942))
?prop.test
prop.test(c(8, 158), c(8+81, 158+6942), alternative = 'greater')
prop.test(c(8, 89), c(158, 158+6942), alternative = 'greater')
prop.test(c(8, 158), c(8+81, 158+6942), alternative = 'greater')
chisq.test(matrix(z, nr=2))
chisq.test(matrix(z, nr=2), alternative='greater')
args(chisq.test)
z
rownames(nnn[z[1]==8, ])
z
rownames(nnn[z[1]==8 &z[2]==158, ])
rownames(nnn[z[1]==8 &z[2]==81, ])
rownames(nnn[z[1]==8 &z[2]==81, , drop=FALSE])
rownames(nnn[z[1]==8 &z[3]==81, , drop=FALSE])
sr <- c(nnn[, 1]+nnn[, 3], nnn[, 2]+nnn[, 4]);
sc <- c(nnn[, 1]+nnn[, 2], nnn[, 3]+nnn[, 4]);
e <- outer(sr, sc, "*") / rowSums(nnn);
chi <- apply(nnn, 1, function(ns) {
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
y <- min(0.5, abs(ns - e));
sum((abs(ns - e) - y) ^ 2 / e);
});
pvl <- pchisq(chi, df=1, lower.tail = FALSE, log.p=TRUE);
pvl <- exp(pvl);
z
p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]))$p.value[[1]])
p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater')$p.value[[1]])
m
p
head(p)
min(p)
nnn[p==min(p), ]
min(pvl)
plot(pvl, p)
sr <- c(nnn[, 1]+nnn[, 3], nnn[, 2]+nnn[, 4]);
sc <- c(nnn[, 1]+nnn[, 2], nnn[, 3]+nnn[, 4]);
e <- outer(sr, sc, "*") / rowSums(nnn);
chi <- apply(nnn, 1, function(ns) {
sr <- c(ns[1]+ns[3], ns[2]+ns[4]);
sc <- c(ns[1]+ns[2], ns[3]+ns[4]);
e <- outer(sr, sc, "*") / sum(ns);
y <- min(0.5, abs(ns - e));
sum((abs(ns - e) - y) ^ 2 / e);
});
pvl <- pchisq(chi, df=1, lower.tail = FALSE, log.p=TRUE);
pvl <- exp(pvl);
plot(osr, pvl)
plot(osr, pvl, log='x')
pvl[osr==0]
summary(pvl[osr==0])
?pchisq
max(pvl)
nnn[pvl==1, ][1:2, ]
nnn[pvl==1, ]
nnn[pvl==max(pvl), ]
nnn[osr<1 & pvl<0.05, ]
nnn[osr<1 & pvl<0.05, ]->v
chisq.test(matrix(v, nr=2))
v[3] <- 500
chisq.test(matrix(v, nr=2))
pchisq(30.106, 1, lower.tail=FALSE)
pchisq(30.106, 1, lower.tail=TRUE)
summary(chi)
pchisq(0, 1, lower.tail=TRUE)
pchisq(0, 1, lower.tail=FALSE)
system.time(x <- apply(nnn, 1, function(x) matrix(x, nr=2)))
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
x[[1]]
options(warning.length = -1)
options(warning = -1)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warning = 0)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warn = 0)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warn = -1)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
?chisq.test
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
system.time(pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]))
0.1*25
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
summary(pvl)
?phyper
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
summary(pvl)
max(pvl)
pv1 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pv2 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=TRUE, log.p=TRUE);
pvl <- pmin(pv1, pv2);
pvl <- 2*exp(pvl);
system.time({pv1 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pv2 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=TRUE, log.p=TRUE);
pvl <- pmin(pv1, pv2);
pvl <- 2*exp(pvl);})
summary(pvl)
max(pvl)
min(pvl)
summary(pv1)
summary(pv2)
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
min(pvl)
nnn[pvl==min(pvl), ]
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
summary(pvl)
min(pvl[osr<1])
summary(chi)
v
which(rownames(nnn)[pvl <0.05&osr<1])
(rownames(nnn)[pvl <0.05&osr<1])
v <- nnn["KEGG:hsa04740", ]
v
chisq.test(matrix(v, nr=2))
chisq.test(matrix(v[c(1,3,2,4)], nr=2))
system.time(pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]))
0.125*20
p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater')$p.value[[1]])
system.time(p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater'sy)$p.value[[1]]))
system.time(p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater')$p.value[[1]]))
summary(p)
plot(pvl, p)
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pvl <- exp(pvl);
plot(pvl, p)
n[1:2, ]
nnn[1:3, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2))
}
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2));
}
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2));
tbl[1:2, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2), pvl);
tbl[1:4, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
pvl, 'FDR'=p.adjust(pvl, method='BH'));
tbl[1:3, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
PValue=pvl, 'FDR'=p.adjust(pvl, method='BH'));
rownames(tbl) <- rownames(nnn);
nnn[1:10, ]
x <- tbl[order(tbl[, 'PValue']), ]
head(x)
options(warn = -1);
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
options(warn = -1);
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
PValue=pvl, 'FDR'=p.adjust(pvl, method='BH'));
rownames(tbl) <- rownames(nnn);
x <- tbl[order(tbl[, 'PValue']), ]
head(x)
z
p1 <- z[1]/(z[1]+z[2])
p1 <- z[1]/(z[1]+z[3])
p2 <- z[2]/(z[2]+z[4])
p1
p2
p <- (z[1]+z[2])/sum(z)
p
(p1-p2)/sqrt(p*(1-p)*(1/(z[1]+z[3])+1/(z[2]+z[4])))
pz(4.221909 )
pnorm(4.221909 )
pnorm(4.221909)
z
158+6942
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*/(1/n1+1/n2));
z  <- (p1-p2)/sqrt(p0*(1-p0)/(1/n1+1/n2));
max(z)
summary(z)
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)/(1/n1+1/n2));
summary(z)
summary(p1)
summary(p2)
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*(1/n1+1/n2));
max(z)
nnn[z==max(z), ]
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*(1/n1+1/n2));
pvl <- pnorm(z, lower.tail = FALSE, log.p = TRUE);
pvl <- exp(pvl);
min(pvl)
nnn[pvl==min(pvl)]
max(z)
min(z)
tbl[z==max(z), ]
tbl[z==max(z), 1:4]
nnn[z==max(z), ]
x <- c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")
substr(x, 1, 1) <- toupper(substr(x, 1,1))
x
y <- c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")
z <- cbind(x, y)
z
WriteXLS::WriteXLS(z, '~/Desktop/x')
WriteXLS::WriteXLS(data.frame(z), '~/Desktop/x')
WriteXLS::WriteXLS(data.frame(z), '~/Desktop/x.xlsx')
s <- readRDS('~/Desktop/statistics_example.rds')
dim(s)
s[1:2, ]
r <- runGSA(s[, 2], geneSetStat = 'fisher')
a <- load("/Users/zhangz/Downloads/genesets_BioSystems_KEGG_human.rdata")
a
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = lst)
args(loadGSC)
?loadGSC
tbl <- data.frame(sapply(lst, length))
rownames(tbl) <- names(lst)
head(tbl)
names(tbl)[1] <- 'Size'
gsc <- list(lst, tbl)
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
?GSC
gsc <- loadGSC('~/Downloads/genesets_BioSystems_KEGG_human.txt', type='gmt')
gsc
str(gsc)
class(gsc)
length(gsc)
names(gsc)
class(gsc[[1]])
class(gsc[[2]])
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
head(gsc[[1]])
head(gsc[[2]])
class(gsc[[2]])
gsc[[2]] <- data.frame(gsc[[2]], stringsAsFactors = FALSE)
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
head(s[, 2])
v <- s[, 2]
names(v) <- rownames(s)
r <- runGSA(v, geneSetStat = 'fisher', gsc = gsc)
r <- runGSA(v, geneSetStat = 'fisher', gsc = gsc, signifMethod='nullDist')
dim(r)
str(r)
length(r)
str(r)
names(r)
a <- r[[2]]
dim(a)
head(a)
a
str(r)
head(d)
dim(s)
d <- s[, 1]
names(d) <- rownames(s)
head(d)
r <- runGSA(v, geneSetStat = 'fisher', directions=d, gsc = gsc, signifMethod='nullDist')
str(r)
r <- runGSA(v, geneSetStat = 'page', directions=d, gsc = gsc, signifMethod='nullDist')
r <- runGSA(v, geneSetStat = 'stouffer', directions=d, gsc = gsc, signifMethod='nullDist')
str(r)
r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc, signifMethod='nullDist')
gsc0 <- gsc
gsc0[[1]] <- gsc0[[1]][1:20]
gsc0[[2]] <- gsc0[[2]][1:20, ]
r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='nullDist')
x <- gsc0[[1]]
sapply(x, length)
system.time(r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='geneSampling'))
length(v)
system.time(r <- runGSA(v[1:10000], geneSetStat = 'reporter', directions=d[1:10000], gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(v[1:5000], geneSetStat = 'reporter', directions=d[1:5000], gsc = gsc0, signifMethod='nullDist'))
summary(v)
system.time(r <- runGSA(d, geneSetStat = 'page', gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(d, geneSetStat = 'page', gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(d, geneSetStat = 'tailStrength', gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(v, geneSetStat = 'tailStrength', directions=d, gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(v, geneSetStat = 'wilcoxon', directions=d, gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(d, geneSetStat = 'gsea', directions=d, gsc = gsc0, signifMethod='geneSampling'))
str(d)
length(gsc)
dim(gsc[[1]])
length(gsc[[1]])
saveRDS(gsc, '~/Desktop/gsc_skeloton.rds')
r <- runGSA(stat[, 1], geneSetStat = 'gsea', gsc = gsc, signifMethod='geneSampling')
s <- readRDS('~/Desktop/statistics_example.rds')
dim(s)
setwd('~/Documents/RoCA/template/')
dir()
f <- dir(rec=TRUE)
f
f <- f[grep('html', f)]
f
f <- f[grep('index', f)]
f
f <- f[grep('alone', f)]
f
dir()
dir("..")
dir.create('../data/example')
f0 <- strsplit(f, '/')
f0
f0
f
f0 <- gsub('/', '-', f)
f0
f1 <- paste('../data/example', f0, sep='/')
file.copy(f, f1)
