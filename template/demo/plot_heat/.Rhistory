nnn[pvl==max(pvl), ]
nnn[osr<1 & pvl<0.05, ]
nnn[osr<1 & pvl<0.05, ]->v
chisq.test(matrix(v, nr=2))
v[3] <- 500
chisq.test(matrix(v, nr=2))
pchisq(30.106, 1, lower.tail=FALSE)
pchisq(30.106, 1, lower.tail=TRUE)
summary(chi)
pchisq(0, 1, lower.tail=TRUE)
pchisq(0, 1, lower.tail=FALSE)
system.time(x <- apply(nnn, 1, function(x) matrix(x, nr=2)))
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
x[[1]]
options(warning.length = -1)
options(warning = -1)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warning = 0)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warn = 0)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
options(warn = -1)
system.time(x <- apply(nnn, 1, function(x) chisq.test(matrix(x, nr=2))))
?chisq.test
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
system.time(pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]))
0.1*25
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
summary(pvl)
?phyper
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
summary(pvl)
max(pvl)
pv1 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pv2 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=TRUE, log.p=TRUE);
pvl <- pmin(pv1, pv2);
pvl <- 2*exp(pvl);
system.time({pv1 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pv2 <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=TRUE, log.p=TRUE);
pvl <- pmin(pv1, pv2);
pvl <- 2*exp(pvl);})
summary(pvl)
max(pvl)
min(pvl)
summary(pv1)
summary(pv2)
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
min(pvl)
nnn[pvl==min(pvl), ]
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
summary(pvl)
min(pvl[osr<1])
summary(chi)
v
which(rownames(nnn)[pvl <0.05&osr<1])
(rownames(nnn)[pvl <0.05&osr<1])
v <- nnn["KEGG:hsa04740", ]
v
chisq.test(matrix(v, nr=2))
chisq.test(matrix(v[c(1,3,2,4)], nr=2))
system.time(pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]))
0.125*20
p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater')$p.value[[1]])
system.time(p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater'sy)$p.value[[1]]))
system.time(p <- apply(nnn, 1, function(ns) prop.test(c(ns[1], ns[2]), c(ns[1]+ns[3], ns[2]+ns[4]), alternative='greater')$p.value[[1]]))
summary(p)
plot(pvl, p)
pvl <- phyper(n11-1, n11+n01, n10+n00, n11+n10, lower.tail=FALSE, log.p=TRUE);
pvl <- exp(pvl);
plot(pvl, p)
n[1:2, ]
nnn[1:3, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2))
}
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2));
}
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2));
tbl[1:2, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2), pvl);
tbl[1:4, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
pvl, 'FDR'=p.adjust(pvl, method='BH'));
tbl[1:3, ]
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
PValue=pvl, 'FDR'=p.adjust(pvl, method='BH'));
rownames(tbl) <- rownames(nnn);
nnn[1:10, ]
x <- tbl[order(tbl[, 'PValue']), ]
head(x)
options(warn = -1);
pvl <- apply(nnn, 1, function(ns) chisq.test(matrix(ns, nr=2))$p.value[[1]]);
options(warn = -1);
tbl <- cbind(N_Within=n11, N_Total=n11+n01, "Within(%)"=round(100*n11/(n10+n10), 2),
"Overall(%)"=round(100*(n11+n01)/rowSums(nnn), 2), "OddRatio"=round(osr, 2),
PValue=pvl, 'FDR'=p.adjust(pvl, method='BH'));
rownames(tbl) <- rownames(nnn);
x <- tbl[order(tbl[, 'PValue']), ]
head(x)
z
p1 <- z[1]/(z[1]+z[2])
p1 <- z[1]/(z[1]+z[3])
p2 <- z[2]/(z[2]+z[4])
p1
p2
p <- (z[1]+z[2])/sum(z)
p
(p1-p2)/sqrt(p*(1-p)*(1/(z[1]+z[3])+1/(z[2]+z[4])))
pz(4.221909 )
pnorm(4.221909 )
pnorm(4.221909)
z
158+6942
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*/(1/n1+1/n2));
z  <- (p1-p2)/sqrt(p0*(1-p0)/(1/n1+1/n2));
max(z)
summary(z)
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)/(1/n1+1/n2));
summary(z)
summary(p1)
summary(p2)
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*(1/n1+1/n2));
max(z)
nnn[z==max(z), ]
p0 <- (n11+n01)/(n10+n00);
n1 <- n11+n10;
n2 <- n01+n00;
p1 <- n11/(n1);
p2 <- n01/(n2);
z  <- (p1-p2)/sqrt(p0*(1-p0)*(1/n1+1/n2));
pvl <- pnorm(z, lower.tail = FALSE, log.p = TRUE);
pvl <- exp(pvl);
min(pvl)
nnn[pvl==min(pvl)]
max(z)
min(z)
tbl[z==max(z), ]
tbl[z==max(z), 1:4]
nnn[z==max(z), ]
x <- c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")
substr(x, 1, 1) <- toupper(substr(x, 1,1))
x
y <- c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")
z <- cbind(x, y)
z
WriteXLS::WriteXLS(z, '~/Desktop/x')
WriteXLS::WriteXLS(data.frame(z), '~/Desktop/x')
WriteXLS::WriteXLS(data.frame(z), '~/Desktop/x.xlsx')
s <- readRDS('~/Desktop/statistics_example.rds')
dim(s)
s[1:2, ]
r <- runGSA(s[, 2], geneSetStat = 'fisher')
a <- load("/Users/zhangz/Downloads/genesets_BioSystems_KEGG_human.rdata")
a
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = lst)
args(loadGSC)
?loadGSC
tbl <- data.frame(sapply(lst, length))
rownames(tbl) <- names(lst)
head(tbl)
names(tbl)[1] <- 'Size'
gsc <- list(lst, tbl)
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
?GSC
gsc <- loadGSC('~/Downloads/genesets_BioSystems_KEGG_human.txt', type='gmt')
gsc
str(gsc)
class(gsc)
length(gsc)
names(gsc)
class(gsc[[1]])
class(gsc[[2]])
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
head(gsc[[1]])
head(gsc[[2]])
class(gsc[[2]])
gsc[[2]] <- data.frame(gsc[[2]], stringsAsFactors = FALSE)
r <- runGSA(s[, 2], geneSetStat = 'fisher', gsc = gsc)
head(s[, 2])
v <- s[, 2]
names(v) <- rownames(s)
r <- runGSA(v, geneSetStat = 'fisher', gsc = gsc)
r <- runGSA(v, geneSetStat = 'fisher', gsc = gsc, signifMethod='nullDist')
dim(r)
str(r)
length(r)
str(r)
names(r)
a <- r[[2]]
dim(a)
head(a)
a
str(r)
head(d)
dim(s)
d <- s[, 1]
names(d) <- rownames(s)
head(d)
r <- runGSA(v, geneSetStat = 'fisher', directions=d, gsc = gsc, signifMethod='nullDist')
str(r)
r <- runGSA(v, geneSetStat = 'page', directions=d, gsc = gsc, signifMethod='nullDist')
r <- runGSA(v, geneSetStat = 'stouffer', directions=d, gsc = gsc, signifMethod='nullDist')
str(r)
r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc, signifMethod='nullDist')
gsc0 <- gsc
gsc0[[1]] <- gsc0[[1]][1:20]
gsc0[[2]] <- gsc0[[2]][1:20, ]
r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='nullDist')
x <- gsc0[[1]]
sapply(x, length)
system.time(r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(v, geneSetStat = 'reporter', directions=d, gsc = gsc0, signifMethod='geneSampling'))
length(v)
system.time(r <- runGSA(v[1:10000], geneSetStat = 'reporter', directions=d[1:10000], gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(v[1:5000], geneSetStat = 'reporter', directions=d[1:5000], gsc = gsc0, signifMethod='nullDist'))
summary(v)
system.time(r <- runGSA(d, geneSetStat = 'page', gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(d, geneSetStat = 'page', gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(d, geneSetStat = 'tailStrength', gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(v, geneSetStat = 'tailStrength', directions=d, gsc = gsc0, signifMethod='geneSampling'))
system.time(r <- runGSA(v, geneSetStat = 'wilcoxon', directions=d, gsc = gsc0, signifMethod='nullDist'))
system.time(r <- runGSA(d, geneSetStat = 'gsea', directions=d, gsc = gsc0, signifMethod='geneSampling'))
str(d)
length(gsc)
dim(gsc[[1]])
length(gsc[[1]])
saveRDS(gsc, '~/Desktop/gsc_skeloton.rds')
r <- runGSA(stat[, 1], geneSetStat = 'gsea', gsc = gsc, signifMethod='geneSampling')
s <- readRDS('~/Desktop/statistics_example.rds')
dim(s)
library(piano)
?runGSA
c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")
c("fisher", "stouffer", "reporter", "tailStrength", "wilcoxon", "mean", "median", "sum", "maxmean", "gsea", "page")->x
length(x)
ks.test
?ks.test
?runGSA
tbl <- RoCA::ImportTable('~/Downloads/count_noncoding.xlsx')
dim(tbl)
tbl[1:2, ]
table(tbl$Type)
sort(table(tbl$Type))
q()
setwd("~/Documents/ugac")
?navbarPage
library(shiny)
?navbarPage
fluidPage
setwd("~/Documents/ugac")
d <- readRDS('data.rds')
dim(d)
head(d)
colnames(data)
colnames(data)
colnames(d)
f <- as.factor(rep(1:12), each=3)
f <- as.factor(rep(1:12, each=3))
length(f)
e <- d[1, ]
summary(aov(e~f))
aov(e~f)
summary(aov(e~f))[[1]]->x
x
x[1,2]/x[1,1]
x[2,2]/x[2,1]
x[1,3]/x[2,3]
sd(e)
dim(e)
head(e)
mean(e)
sd(e)
aov
aov
aov(e~f)
matrix(e, nc=3)
e[1:34]
e[1:3]
matrix(e, nr=3)
e[1:3]
matrix(e, nr=3)->b
m <- colMeans(b)
b
v <- apply(b, 2, var)
sum(v)
aov(e~d)
aov(e~f)
sum(v)*2
summary(aov(e~f))
var(e)
sd(m)
var(m)
sd(e^2)
rng <- range(d)
head(rng)
?range
Summary(d)->x
r <- apply(d, 1, function(d) range(d, na.rm=TRUE));
dim(r)
sum(e^2)
aov
summary(aov(e~f))
m
sum(var(m))
var(m)
b
var <- sapply(b, 2, var)
v <- apply(b, 2, var)
v
sum(v)
v <- apply(b, 2, sd)
v
sum((v/sqrt(2))^2)
sum((v*sqrt(2))^2)
s <- summary(aov(e~f))
s
s <- s[[1]]
s[2,2]
group <- sample(1:5, 36, replace = TRUE)
group
group <- split(1:36, group)
group
g <- lapply(group, function(g) d[, g, drop=FALSE]);
sapply(g, dim)
group <- sample(1:16, 36, replace = TRUE)
g <- lapply(group, function(g) d[, g, drop=FALSE]);
sapply(g, length)
sapply(g, dim)
group
group <- split(1:36, group)
group
g <- lapply(group, function(g) d[, g, drop=FALSE]);
sapply(g, dim)
group
x <- do.call('cbind', g)
dim(x)
y <- x[1, ]
z <- factor(rep(names(group), sapply(group, length)))
z
summary(aov(y~z))
v <- sapply(g, function(g) sd(g[1,]))
v
v[is.na(v)] <- 0
v
sum(v)
sum(v)*2
sum(v^2)
n <- sapply(g, length)
n
n <- sapply(g, ncol)
v
n
v*(n-1)
sum(v*(n-1))
z
summary(aov(y~z))
sum(v*sqrt(n-1))
sum(v^2*sqrt(n-1))
sum(v^2sqrt(n-1))
sum(v^2*sqrt(n-1))
sum(v^2*(n-1))
v <- sapply(g, function(g) if (ncol(g)==1) rep(0, nrow(g)) else apply(g, 1, var));
dim(v)
head(v)
a <- v*(n-1)
a[1:2, ]
sum(a[1, ])
a <- v*sqrt(n-1)
sum(a[1, ])
a <- v*(n-1)
sum(a[1, ])
var(1:3)
sd(1:3)
var(1:5)
sd(1:5)
sd(1:5)^2
sum(v[1,]*sqrt(n-1))
sum(v[1,]*(n-1))
b <- (v[1,]*(n-1))
a <- v*(n-1)
dim(a)
a[1, ]
b
b <- t(v[1,])*(n-1)
dim(b)
b <- t(v)*(n-1)
dim(b)
b[, 1]
sum(b[, 1])
g <- lapply(group, function(g) d[, g, drop=FALSE]);
n <- sapply(group, length);
v <- sapply(g, function(g) if (ncol(g)==1) rep(0, nrow(g)) else apply(g, 1, sd));
r <- colSums(t(v)*(n-1));
head(r)
dim(v)
sum(v[1, ]*(n-1))
g <- lapply(group, function(g) d[, g, drop=FALSE]);
n <- sapply(group, length);
v <- sapply(g, function(g) if (ncol(g)==1) rep(0, nrow(g)) else apply(g, 1, var));
r <- colSums(t(v)*(n-1));
head(r)
dim(y)
dim(x)
head(z)
aov <- apply(x, 1, function(x) summary(aov(x~z))[[1]])
a <- sapply(aov, function(x) x[2,2])
head(a)
table(a==r)
plot(a, r)
cor(a, r)
b <- a-r
summary(b)
aov[[1]]
z
a <- split(x[1,], z)
a <- sapply(a, mean)
mean(a)
sd(a)
m <- a
m
length(m)
sum(m^2)
mean(m)
sum((m-mean(m))^2)
sum((m-mean(m))^2)*2
aov[[1]]
sum((m-mean(m))^2/sqrt(n-1))
sum((m-mean(m))^2*(n-1))
sum((m-mean(m))*(n-1)))^2)
sum((m-mean(m)*(n-1)))^2)
sum((m-mean(m)*(n-1))^2)
s <- matrix(1:100, nc=5)
y <- apply(s, 1, function(s) {
s[is.na(s)] <- 0;
list(array = s, type = 'data', color = '#000000', thickness = 1, width = w, opacity = .9);
});
w <-1
y <- apply(s, 1, function(s) {
s[is.na(s)] <- 0;
list(array = s, type = 'data', color = '#000000', thickness = 1, width = w, opacity = .9);
});
y
length(y)
s <- matrix(1:100, nc=20)
y <- apply(s, 1, function(s) {
s[is.na(s)] <- 0;
list(array = s, type = 'data', color = '#000000', thickness = 1, width = w, opacity = .9);
});
z <- y[[1]]
z
plot_ly(x=c('a', 'b'), y=2:3, error_y=list(array(1, 1), type='data'))
x <- readRDS('~/Desktop/___expr_0_12.rds')
dim(x)
mean(x[1, ])
head(x[1, ])
colnames(x)
a <- colnames(x)
b <- sub('WT_', '', a)
b <- sub('_[1-3]$', '', b)
b
a <- paste(a, b, sep='\t')
a
writeLines(a, '~/Desktop/___group_0_12.txt')
b <- strsplit(a, '\t')
do.call('rbind', b)
do.call('rbind', b)->b
c <- apply(b, 2, function(b) paste(b, collapse='\t'))
c
writeLines(c, '~/Desktop/___group_0_12.txt')
b
dim(x)
colnames(x) <- b[, 2]
x[1:2, ]
saveRDS(x, '~/Desktop/___expr_0_12.rds')
x <- '00Hr	00Hr	00Hr	02Hr	02Hr	02Hr	04Hr	04Hr	04Hr	06Hr	06Hr	06Hr	08Hr	08Hr	08Hr	10Hr	10Hr	10Hr	12Hr	12Hr	12Hr'
strsplit(x, '\t')
paste(colnames(x), collapse='\t')
dim(x)
colnames(x)
dim(x)
x <- readRDS('~/Desktop/___expr_0_12.rds')
colnaems(x)
colnames(x)
paste(colnames(x), collapse='\t')
colnames(x) <- paste('WT', colnames(x), sep='_')
colnames(x)
saveRDS(x, '~/Desktop/___expr_0_12.rds')
setwd('~/Documents/')
setwd('RoCA/template/demo/plot_heat/')
RoCA::CreateReport('plot_heat.yaml')
library(RoCA)
q()
