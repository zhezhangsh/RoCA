mx <- sapply(srt, function(x) rev(x)[1]);
mn <- sapply(srt, function(x) x[1]);
p1 <- names(srt)[which(mx==max(mx))];
p2 <- names(srt)[which(mn==min(mn))];
PlotColoredBlock(crr, 0, 1, groups=colnames(cnt));
crr <- cor(log2(cnt+1));
for (i in 1:ncol(cnt)) crr[i, i] <- NA;
srt <- lapply(1:nrow(crr), function(i) sort(crr[i, ]));
names(srt) <- rownames(crr);
mx <- sapply(srt, function(x) rev(x)[1]);
mn <- sapply(srt, function(x) x[1]);
p1 <- names(srt)[which(mx==max(mx))];
p2 <- names(srt)[which(mn==min(mn))];
PlotColoredBlock(crr, groups=colnames(cnt));
crr <- cor(log2(cnt+1));
for (i in 1:ncol(cnt)) crr[i, i] <- NA;
srt <- lapply(1:nrow(crr), function(i) sort(crr[i, ]));
names(srt) <- rownames(crr);
mx <- sapply(srt, function(x) rev(x)[1]);
mn <- sapply(srt, function(x) x[1]);
p1 <- names(srt)[which(mx==max(mx))];
p2 <- names(srt)[which(mn==min(mn))];
PlotColoredBlock(crr, groups=colnames(cnt), key='Correlation coefficient');
top10
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top_Gene=ids10[1, ], Top10_Pct=round(top10[10, ], 1), stringsAsFactors = FALSE)
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
smm
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE)
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
srt[[1]]
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
smm$Nearest <- sapply(srt, function(x) rev(names(x))[1]);
smm$Farthest <- sapply(srt, function(x) names(x)[1]);
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
smm
srt[[1]]
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(f1, width = 800, height = 800);
mx <- names(rev(srt[[id]]))[1];
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
dev.off();
})
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(f1, width = 800, height = 800);
mx <- names(rev(srt[[id]]))[1];
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
dev.off();
})
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(f1, width = 800, height = 800);
mx <- names(rev(srt[[id]]))[1];
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
mx <- names(rev(srt[[id]]))[1];
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
id <- rownames(smm)[1]
id
mx <- names(rev(srt[[id]]))[1];
dev.cur()
dev.off()
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
f1
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
dev.off()
dev.off()
dev.off()
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
})
mx <- names(rev(srt[[id]]))[1];
mx <- names(rev(srt[[id]]))[1];
mx
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
path.fig
dir()
f1
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
name.yaml <- 'rnaseq_count.yaml';
name.packages <- c('rmarkdown', 'knitr', 'kableExtra', 'yaml', 'DT', 'htmlwidgets', 'vioplot',
'GenomicRanges', 'RoCA', 'Rnaseq', 'awsomics', 'DEGandMore');
name.subfolders <- c('path.input'='input', 'path.r'='R', 'path.fig'='figure', 'path.tbl'='table'); # <full.path.to.subfolder>=<subfolder.name>
## Default knitr parameters
knitr::opts_chunk$set(dpi=300, dev=c('png', 'pdf'), echo=FALSE, warning=FALSE, message=FALSE, fig.path = 'figure/');
if (!require(devtools)) { install.packages('devtools'); require(devtools); }
if (!require(RCurl)) { install.packages('RCurl'); require(RCurl); }
if (!require(RoCA)) { install_github('zhezhangsh/RoCAR'); require(RoCA); }
## Load required R packages
loaded <- LoadPackage(name.packages);
if (length(loaded[!loaded])) stop('Error: failed to load package(s) ', paste(names(loaded[!loaded]), collapse=', '));
if (!exists('yml'))                   # if the 'yml' variable doesn't exist yet, create it by loading the YAML file
if (file.exists(name.yaml))         # assume the pairing YAML file exists in the current folder with the same name
yml<-yaml.load_file(name.yaml);   # rename the YAML file to fit this template
prms <- yml$parameter;
## Generate directory and sub-directories where the output files will be
f <- GenerateFolder(yml$output, name.subfolders);
path <- yml$output;
for (i in 1:length(name.subfolders)) assign(names(name.subfolders)[i], f[name.subfolders[i]]);
## Automatical figure/table ordering
OrderFigure(reset=TRUE);
OrderTable(reset=TRUE);
## URL to project home
## Use this line to add a link to project home in the report: `r home.url`
home.url <- Link2Home(yml$home);
cnt <- as.matrix(ImportTable(DownloadFile(yml$input$count, path.input)));
# anno <- ImportTable(DownloadFile(yml$input$annotation, path.input));
# smpl <- ImportTable(DownloadFile(yml$input$sample, path.input));
if (nrow(cnt) < 3) stop("Error: cannot proceed with this analysis with less than 3 genes\n");
if (ncol(cnt) < 3) stop("Error: cannot proceed with this analysis with less than 3 samples\n");
ttl <- colSums(cnt)/10^6;
p.shapiro <- shapiro.test(ttl)$p.value;
nsd <- sapply(1:length(ttl), function(i) (ttl[i]-mean(ttl[-i]))/sd(ttl));
hi <- names(ttl)[nsd >= 3];
if (length(hi) == 0) hi <- 'none' else hi <- paste(hi, collapse='; ');
lo <- names(ttl)[nsd <=-3];
if (length(lo) == 0) lo <- 'none' else lo <- paste(lo, collapse='; ');
par(mar=c(5,5,2,2));
hist(ttl, xlab='Total read count of all genes (millions)', ylab='Number of samples',
main='', cex.lab=1.5, cex.main=1.5, col='#F7DC6F', yaxs='i');
gene.ct  <- sort(rowSums(cnt), decreasing = TRUE);
gene.pct <- 100*gene.ct/sum(gene.ct);
cum.pct  <- cumsum(gene.pct); # Cumulative percent of total reads
par(mar=c(5, 5, 2, 2));
plot(1:nrow(cnt), cum.pct, type='l', col='white', log='x', xlab='Number of genes', ylab='Cumulative percent of total reads (%)',
cex.lab=1.75, xaxs='i', yaxs='i', ylim=c(0, 100), yaxt='n');
axis(2, at=seq(0, 100, 25));
abline(h=seq(25, 75, 25), lty=2, col='lightgrey');
polygon(c(1, 1:nrow(cnt), nrow(cnt)), c(0, cum.pct, 0), border=NA, col='#E6B0AA');
# lines(1:nrow(cnt), cum.pct, lwd=2, col='#BB8FCE');
pct <- c(5, 10, 25, 50, 75, 90, 95);
ind <- as.vector(sapply(pct, function(pct) which(cum.pct>pct)[1]));
text(ind, cum.pct[ind], label=ind, col='#2E86C1', pos=4, cex=1.25);
points(ind, cum.pct[ind], pch='*', cex=1.5);
legend('topleft', bty='n', pch='*', legend=paste(pct, '% total reads: ', ind, ' gene(s)', sep=''), cex=2/3);
box();
gene.ct  <- sort(rowSums(cnt), decreasing = TRUE);
gene.pct <- 100*gene.ct/sum(gene.ct);
cum.pct  <- cumsum(gene.pct); # Cumulative percent of total reads
pct <- apply(cnt, 2, function(c) cumsum(100*rev(sort(c))/sum(c)));
col <- rainbow(ncol(cnt));
var <- apply(pct, 1, sd);
ind <- which(var==max(var));
par(mar=c(5, 5, 2, 2));
plot(1, 1, type='n', col='white', log='x', xlab='Number of genes', ylab='Cumulative percent of total reads (%)',
cex.lab=1.75, xaxs='i', yaxs='i', xlim=c(1, nrow(cnt)), ylim=c(0, 100), yaxt='n');
axis(2, at=seq(0, 100, 25));
abline(h=seq(25, 75, 25), lty=2, col='lightgrey');
for (i in 1:ncol(cnt)) lines(c(1, 1:nrow(cnt)), c(0, pct[, i]), col=col[i], lwd=2/3);
text(ind, pct[ind, ], label=colnames(cnt), col='black', cex=0.4);
box();
top10 <- apply(cnt, 2, function(x) {
x <- rev(sort(x));
y <- cumsum(x[1:min(length(x), 10)]);
y/sum(x)*100;
});
top10 <- top10[, order(top10[nrow(top10), , drop=FALSE])];
CreateDatatable(top10, paste(path.tbl, 'top_gene_count.html', sep='/')) -> x;
ids10 <- apply(cnt, 2, function(x) rownames(cnt)[rev(order(x))][1:10]);
CreateDatatable(ids10, paste(path.tbl, 'top_gene_id.html', sep='/')) -> x;
par(mar=c(8, 5, 3, 2));
plot(0, type='n', ylim=c(min(top10), max(top10)), xlim=c(1, ncol(top10)), xaxs='i', xaxt='n',
xlab='', ylab='Cumulative percent (%)', cex.lab=2,
main=paste('Reads contributed by the top', nrow(top10), 'genes'), cex.main=1.5);
abline(v=1:ncol(top10), lwd=0.5, col='lightgrey', lty=2);
for (i in nrow(top10):1) {
polygon(c(1, 1:ncol(top10), ncol(top10)), c(0, top10[i, ], 0), border=NA, col=terrain.colors(nrow(top10))[i]);
lines(top10[i, ], lwd=0.5, lty=1, pch=20, type='b', col='lightgrey', cex=0.5);
}
axis(1, at=c(1:ncol(top10)), tick=TRUE, label=colnames(top10)[c(1:ncol(top10))], las=3,
cex.axis=min(min(1, 32/ncol(cnt)), 12/max(nchar(colnames(cnt)))));
legend('topleft', bty='n', lty=2, pch=20, col=rev(terrain.colors(nrow(top10))), cex=2/3,
legend=paste('Top ', nrow(top10):1, ', ', rev(round(rowMeans(top10), 2)), '%', sep=''));
nsd <- sapply(1:ncol(top10), function(i)
(top10[nrow(top10), i]-mean(top10[nrow(top10), -i]))/sd(top10[nrow(top10), -i]))
hi <- colnames(top10)[nsd >= 3];
if (length(hi) == 0) hi <- 'none' else hi <- paste(hi, collapse='; ');
lo <- colnames(top10)[nsd <=-3];
if (length(lo) == 0) lo <- 'none' else lo <- paste(lo, collapse='; ');
par(mar=c(5,5,2,2));
logged <- log10(cnt);
logged[logged==-Inf] <- 0;
mn <- rowMeans(logged);
cv <- apply(logged, 1, sd)/mn;
plot(mn, cv, pch=19, cex=.5, xaxt='n', cex.lab=1.5, col='#88888888', xaxs='i', yaxs='i',
xlab='Average read count of all samples', ylab='Coefficient of variation');
axis(1, at=0:ceiling(max(mn)), label=10^(0:ceiling(max(mn))));
# lines(lowess(cv~mn), col=4);
# abline(v = dens$x[dens.y==max(dens.y)], lty=3, col=3);
crr <- cor(log2(cnt+1));
for (i in 1:ncol(cnt)) crr[i, i] <- NA;
srt <- lapply(1:nrow(crr), function(i) sort(crr[i, ]));
names(srt) <- rownames(crr);
mx <- sapply(srt, function(x) rev(x)[1]);
mn <- sapply(srt, function(x) x[1]);
p1 <- names(srt)[which(mx==max(mx))];
p2 <- names(srt)[which(mn==min(mn))];
PlotColoredBlock(crr, groups=colnames(cnt), key='Correlation coefficient');
par(mfrow=c(1, 2));
PlotLogScatter(cnt[, p1[1]], cnt[, p1[2]], xlab=p1[1], ylab=p1[2], col="#E74C3C",
main=paste('Highest Correlation =', round(crr[p1[1], p1[2]], 4)));
abline(0, 1);
PlotLogScatter(cnt[, p2[1]], cnt[, p2[2]], xlab=p1[1], ylab=p1[2], col="#1ABC9C",
main=paste('Lowest Correlation =', round(crr[p2[1], p2[2]], 4)));
abline(0, 1);
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
# ngh <- sapply(rownames(smm), function(id) {
#   mx <- names(rev(srt[[id]]))[1];
#   f1 <- paste0('scatter/', id, '_', mx, '.png');
#   png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
#   PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
#                main=paste('Highest Correlation =', round(crr[id, mx], 4)));
#   abline(0, 1);
# })
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
sessionInfo();
id <- rownames(smm)[1]
id
mx <- names(rev(srt[[id]]))[1];
mx
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
dev.off()
dev.cur()
dev.cur()
dev.cur()
dev.off()
dev.list()
dev.set()
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
dev.cur()
dev.off()
dev.cur()
dev.off()
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
dim(smm)
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Highest Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#1ABC9C",
main=paste('Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
mn <- names(srt[[id]])[1];
f2 <- paste0('scatter/', id, '_', mn, '.png');
png(paste(path.fig, f2, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mn], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Correlation =', round(crr[id, mn], 4)));
abline(0, 1);
try(dev.off());
})
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
paste0('[', mx, '](figure/', f1, ')')
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#1ABC9C",
main=paste('Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
mn <- names(srt[[id]])[1];
f2 <- paste0('scatter/', id, '_', mn, '.png');
png(paste(path.fig, f2, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mn], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Correlation =', round(crr[id, mn], 4)));
abline(0, 1);
try(dev.off());
paste0('[', mx, '](figure/', f1, ')')
});
ngh
dim(ngh)
length(ngh)
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#1ABC9C",
main=paste('Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
mn <- names(srt[[id]])[1];
f2 <- paste0('scatter/', id, '_', mn, '.png');
png(paste(path.fig, f2, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mn], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Correlation =', round(crr[id, mn], 4)));
abline(0, 1);
try(dev.off());
cbind(paste0('[', mx, '](figure/', f1, ')'), paste0('[', mx, '](figure/', f1, ')'));
});
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
ngh
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#1ABC9C",
main=paste('Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
mn <- names(srt[[id]])[1];
f2 <- paste0('scatter/', id, '_', mn, '.png');
png(paste(path.fig, f2, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mn], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Correlation =', round(crr[id, mn], 4)));
abline(0, 1);
try(dev.off());
cbind(paste0('[', mx, '](figure/', f1, ')'), paste0('[', mx, '](figure/', f1, ')'));
});
smm$Nearest  <- ngh[1, ];
smm$Farthest <- ngh[2, ];
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
CreateReport('rnaseq_count.yaml')
dir('table')
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
c <- readRDS("/Users/zhangz/Development/RoCA/data/gex/RNAseq_tech_rep/matrix_rnaseq_lane.rds")
dim(c)
head(c)
summary(c[, 1])
`c ` <- readRDS("/Users/zhangz/Development/RoCA/data/gex/immune_cells_rnaseq/count_gene.rds")
dim(c)
head(c)
c<- readRDS("/Users/zhangz/Development/RoCA/data/gex/immune_cells_rnaseq/count_gene.rds")
dim(c)
head(c)
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
nnz <- apply(cnt, 2, function(c) length(c[c>0]));
smm <- data.frame(Total=colSums(cnt), Mean=round(colMeans(cnt), 2), Median=apply(cnt, 2, median),
ZeroRead=apply(cnt, 2, function(c) length(c[c==0])),
Top10_Pct=round(top10[10, ], 1), Top_Gene=ids10[1, ], stringsAsFactors = FALSE);
dir.create(paste(path.fig, 'scatter', sep='/'), showWarnings = FALSE);
ngh <- sapply(rownames(smm), function(id) {
mx <- names(rev(srt[[id]]))[1];
f1 <- paste0('scatter/', id, '_', mx, '.png');
png(paste(path.fig, f1, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mx], xlab=id, ylab=mx, col="#1ABC9C",
main=paste('Correlation =', round(crr[id, mx], 4)));
abline(0, 1);
try(dev.off());
mn <- names(srt[[id]])[1];
f2 <- paste0('scatter/', id, '_', mn, '.png');
png(paste(path.fig, f2, sep='/'), width = 800, height = 800);
PlotLogScatter(cnt[, id], cnt[, mn], xlab=id, ylab=mx, col="#E74C3C",
main=paste('Correlation =', round(crr[id, mn], 4)));
abline(0, 1);
try(dev.off());
cbind(paste0('[', mx, '](figure/', f1, ')'), paste0('[', mn, '](figure/', f2, ')'));
});
smm$Nearest  <- ngh[1, ];
smm$Farthest <- ngh[2, ];
write.csv(cnt, paste(path.tbl, 'count.csv', sep='/'));
write.csv(smm, paste(path.tbl, 'summary.csv', sep='/'));
write.csv(crr, paste(path.tbl, 'correlation.csv', sep='/'));
smm
smm[1:2, ]
CreateReport('rnaseq_count.yaml')
CreateReport('rnaseq_count.yaml')
q()
