hist(x, br=100)
sort(x)
sort(x)[1:10]
summary(x)
x
sort(x)
tbs[[1]][1:2, ]
x <- tbs[[1]][, 5]
x
x[!is.na(x)]
summary(x[!is.na(x)])
y <- x[!is.na(x)]
y <- y[y!=-Inf]
y
length9y
length(y)
length(x)
hist(y)
sort(y)[1:10]
names(rp)
head(rp[[2]])
hist(rp[[2]][, 1])
tbs<-lapply(1:2, function(i) cbind(sapply(rp[4:1], function(rp) rp[[i]]), -1*rp$AveFC, exp(-1*rp$AveFC*log(2))));
names(tbs)
length(tbs)
head(tbs[[1]])
a <- tbs[[1]]
hist(a[, 3], br=100)
colnames(tbs[[1]])<-colnames(tbs[[2]])<-c('Rank', 'RankProduct', 'Pvalue', 'FDR', paste('Log2(', class2, '/', class1, ')', sep=''), 'FoldChange');
tbs[[1]][, 3]
if (!identical(NA, genename)) rownames(tbs[[1]])<-rownames(tbs[[2]])<-genename;
names(tbs)[1]<-paste(class1, '<', class2);
names(tbs)[2]<-paste(class1, '>', class2);
x <- tbs[[1]][, 3]
x
hist(x)
rk<-rank(log2(tbs[[1]][,2])+log2(1/tbs[[2]][,2]));
p<-rep(1, length(rk));
p[tbs[[1]][, 5]>0]<-tbs[[1]][tbs[[1]][, 5]>0, 3];
tbs[[1]][1:2, ]
x <- tbs[[1]][, 5]
x
dim(mtrx)
names(x)[1]
mtrx[is.na(x), ][1:2, ]
mtrx[-Inf, ][1:2, ]
mtrx[x==-Inf, ][1:2, ]
x
sort(x)
sort(x)[1:2]
x[x==-Inf]
names(x) <- rownames(mtrx)
x[x==-Inf]
head(x)
x
mtrx[x==-Inf &!is.na(x), ][1:2, ]
tbs[[1]][x==-Inf & is.na(x), ][1:2, ]
tbs[[1]][x==-Inf & is.na(x), ]
rownames(tbs[[1]])
a <- rownames(tbs[[1]])
a[x==-Inf]
a[x==-Inf & !is.na(x)]
a[x==-Inf & !is.na(x)] ->b
mtrx[b[1:2], ]
tbs[[1]][b[1:2], ]
install_github('zhezhangsh/DEGandMore'); detach("package:DEGandMore", unload=TRUE); require('DEGandMore')
head(mtrx)
DeMethods()
?voom
x <- voom(mtrx)
dim(x)
as.matrix(x)->x
dim(x)
head(x)
boxplot(data.frame(x))
summary(x[, 1])
summary(mtrx[, 1])
hist(x[, 1])
hist(x[, 1], br=100)
ct <- readRDS('~/Documents/RoCA/data/gex/immune_cells_rnaseq/count_gene.rds')
dim(ct)
v <- voom(ct)
v <- voom(ct)$E
dim(v)
class(v)
head(v)
boxplot(data.frame(v))
plot(v[, 1], log2(ct[, 1]))
colSums(v)
plot(v[, 1], v[, 2])
PlotLogScatter(ct[, 1], ct[, 2])
args(normalizeBetweenArrays)
?normalizeBetweenArrays
v <- voom(ct, normalize.method = 'quantile')$E
boxplot(data.frame(v))
v <- voom(ct, normalize.method = 'scale')$E
v <- voom(ct, normalize.method = 'cyclicloess')$E
boxplot(data.frame(v))
?calcNormFactors
dim(v)
head(v)
apply(v, 2, min)
plot(ct[, 1], v[, 1])
plot(ct[, 1], v[, 1], log='x')
plot(log2(1+ct[, 1]), v[, 1], log='x')
v <- voom(ct, normalize.method = 'none')
plot(log2(1+ct[, 1]), v[, 1], log='x')
plot(log2(1+ct[, 1]), v[, 1])
plot(log2(1+ct[, 1]), v[, 1])
head(v)
v <- voom(ct)$E
v[1, ]
plot(log2(1+ct[, 1]), v[, 1])
apply(v, 2, min)
boxplot(data.frame(v))
x <- sort(v[, 1])
y <- sort(ct[, 1])
head(x)
head(y[x>min(x)])
y[x>min(x)]
head(y[x>min(x)])
head(x[x>min(x)])
head(x)
a <- unique(x)
b <- unique(y)
head(a)
head(b)
plot(b, a)
plot(log2(b+1), a)
log2(max(b)+1)
max(a)
log2(1/10^6)
voom
log2(t(counts + 0.5)/(lib.size + 1)
x <- log2(ct[, 1]+0.5)/(sum(ct[, 1])+1)
min(x)
x <- log2(ct[, 1]+0.5)/(sum(ct[, 1])+1)* 10^6
min(x)
x <- log2(ct[, 1]+0.5/(sum(ct[, 1])+1)* 10^6)
min(x)
calcNormFactors
0.5/(sum(ct[, 1])+1)* 10^6
plot(v[, 1:2])
x <- NormLoess(v)
plot(x[, 1:2])
min(x[, 1])
min(x[, 2])
min(v[, 1])
min(v[, 2])
?voom
?normalizeBetweenArrays
?voom
voom
cnt <- ct
dim(cnt)
sz <- sum(rowMeans(cnt)/10^6);
d <- log2((cnt+0.5)/sz);
d <- exp(NormLoess(d)*log(2));
dim(d)
head(d)
class(d)
summary(d[, 1])
sz
summary(d[, 2])
summary(d[, 3])
summary(d[, 4])
summary(d[, 5])
colSums(cnt)[1:5]
PlotLogScatter(cnt[, 1], d[, 1])
summary(d[cnt[, 1]==0, 1])
table(d[cnt[, 1]==0, 1])
summary(d[cnt[, 1]==0, 1])
summary(d[cnt[, 1]==1, 1])
d <- d*sz-0.5;
dim(d)
summary(d[, 1])
summary(d[cnt[, 1]==0, 1])
summary(d[cnt[, 1]==1, 1])
d[d<0] <- 0;
head(d)
d[1, ]
cnt[1, ]
plot(cnt[1, ], d[1, ])
sz <- sum(rowMeans(cnt+1)/10^6);
d <- log2((cnt+0.5)/sz);
d <- exp(NorszmLoess(d)*log(2));
d <- d*sz-0.5;
d[d<0] <- 0;
sz <- sum(rowMeans(cnt+1)/10^6);
d <- log2((cnt+0.5)/sz);
d <- exp(NormLoess(d)*log(2));
d <- d*sz-0.5;
d[d<0] <- 0;
dim(d)
d[1:2, ]
PlotLogScatter(cnt[, 1], d[, 1])
install_github('zhezhangsh/DEGandMore')
normLog <- function(mthd, mtrx) {
sz <- sum(rowMeans(mtrx+1)/10^6);
d <- log2((mtrx+0.5)/sz);
d <- do.call(mthd, d);
d <- exp(d*log(2));
d <- d*sz-0.5;
d[d<0] <- 0;
d
}
x <- normLog('NormLoess', cnt);
normLog <- function(mthd, mtrx) {
sz <- sum(rowMeans(mtrx+1)/10^6);
d <- log2((mtrx+0.5)/sz);
d <- do.call(mthd, list(mtrx=mtrx));
d <- exp(d*log(2));
d <- d*sz-0.5;
d[d<0] <- 0;
d
};
x <- normLog('NormLoess', cnt);
summary(x[, 1])
max(x)
mtrx <- cnt
sz <- sum(rowMeans(mtrx+1)/10^6);
d <- log2((mtrx+0.5)/sz);
normLog <- function(mthd, mtrx) {
sz <- sum(rowMeans(mtrx+1)/10^6);
d <- log2((mtrx+0.5)/sz);
d <- do.call(mthd, list(mtrx=d));
d <- exp(d*log(2));
d <- d*sz-0.5;
d[d<0] <- 0;
d
};
x <-  normLog('NormCyclicLoess', cnt);
dim(x)
summary(x[, 1])
summary(cnt[, 1])
y <- normLog('NormLoess', cnt);
summary(y[, 1])
min(y[, 1])
z <- y[, 1]
z <- z[>0]
z <- z[z>0]
z <- sort(z)
head(z)
summary(x[, 1])
sort(x[, 1])->a
a<-a[a>0]
head(a)
PlotLogScatter(x[, 1], y[, 1])
PlotLogScatter(cnt[, 1], y[, 1])
PlotLogScatter(cnt[, 1], x[, 1])
install_github('zhezhangsh/Rnaseq')
install_github('zhezhangsh/Rnaseq')
c("NormTotalCount", "NormMedian", "NormQQ", "NormUpperQuantile", "NormRLE",
"NormTMM", "NormDESeq", "NormLoess", "NormCyclicLoess", "NormFPKM", "NormTPM")
c("NormTotalCount", "NormMedian", "NormQQ", "NormUpperQuantile", "NormRLE",
"NormTMM", "NormDESeq", "NormLoess", "NormCyclicLoess", "NormFPKM", "NormTPM")->x
x
length(x)
setwd('~/Documents/RoCA/template/qc/rnaseq_sample/')
rm(list=ls())
ls()
source('~/.active-rstudio-document', echo=TRUE)
sapply(norm, dim)
lapply(norm, rownames) -> x
str(x)
dim(ct)
head(ct)
ct[[4]]
ct[[4]]
cnt <- ct
x<-NormQQ(cnt, ref='median')
dim(x)
head(x)
install_github('zhezhangsh/DEGandMore')
install_github('zhezhangsh/Rnaseq')
detach("package:DEGandMore", unload=TRUE)
library("DEGandMore", lib.loc="~/Library/R/3.2/library")
detach("package:Rnaseq", unload=TRUE)
library("Rnaseq", lib.loc="~/Library/R/3.2/library")
x <- NormQQ(cnt, ref='median');
dim(cnt)
head(x)
norm <- NormalizeRNAseq(ct, gn.len);
sapply(norm, dim)
x <- lapply(norm, rownames)
str(x)
y <- sapply(x[2:length(x)], function(y) table(y==x[[1]]))
y
mns <- sapply(norm, function(x) rowMeans(x, na.rm=TRUE));
ind <- which(rowSums(mns)>0);
grps <- split(rownames(smpl), smpl[, 1]);
grps <- grps[sapply(grps, length) > 1];
c <- sum(sapply(grps, function(x) sum(1:(length(x)-1))));
if (c < 6) grps <- list(group=rownames(smpl));
calcCv <- function(d, grps) {
v <- sapply(grps, function(g)
length(g[-1])*apply(d[, g, drop=FALSE], 1, function(x) var(x, na.rm=TRUE)));
v <- rowSums(v)/(length(unlist(grps))-length(grps));
sqrt(v)/rowMeans(d, na.rm=TRUE);
}
calcCorr <- function(d, grps) {
corr <- lapply(grps, function(g) as.vector(as.dist(cor(d[, g, drop=FALSE]))));
as.vector(unlist(corr));
}
cv <- sapply(norm, function(x) calcCv(x[ind, , drop=FALSE], grps));
cv[is.na(cv)] <- 0;
corr <- sapply(norm, function(x) calcCorr(x[ind, , drop=FALSE], grps));
dim(cv)
head(cv)
summary(cv[, 1])
nrow(cv[cv[,1]==0, ])
names(norm)
?normalizeCyclicLoess
dim(ct)
ct[1, ]
a <- DESeq::estimateSizeFactorsForMatrix(mtrx)
a <- DESeq::estimateSizeFactorsForMatrix(ct)
b <- DESeq2::estimateSizeFactorsForMatrix(ct)
a[1, ]
a <- sapply(1:ncol(ct), function(i) ct[, i]/a[i]);
b <- sapply(1:ncol(ct), function(i) ct[, i]/b[i]);
a[1, ]
b[1, ]
identical(a, b)
rm(list=ls())
dir()
CreateReport('rnaseq_sample.yaml')
dff <- apply(cv, 2, function(x) x - cv[, 1]);
par(mar=c(8,5,2,2));
boxplot(data.frame(dff), outline=FALSE, las=3, ylab='Change of coefficient of variation', cex.lab=1.5,
col='lightblue', outwex=0, lwd=0.5);
abline(h=0, col=3, lty=3);
points(1:ncol(dff), colMeans(dff), pch=8, col=2, cex=0.5);
saveRDS(norm, paste(path.r, 'normalized.rds', sep='/'));
saveRDS(cv, paste(path.r, 'Coeff_of_Var.rds', sep='/'));
fn <- CreateDatatable(cbind(anno[rownames(cv), ], cv), paste(path.tbl, 'Coeff_of_Var.html', sep='/'));
c <- t(apply(dff, 2, function(x) c(length(x[x<0]), length(x[x>0]))));
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), Corr2Original=cor(cv, cv)[, 1],
Num_Decrease=c[, 1], Num_Increase=c[, 2], "Decrease_vs_Increase" = c[, 1]/c[, 2]);
ls()
source('~/.active-rstudio-document', echo=TRUE)
length(norm)
col <- gray.colors(length(unique(smpl[, 1]))+1)[-1];
col <- col[as.integer(factor(smpl[, 1]))];
par(mfrow=c(3, 4), omi=c(0, 0.5, 0, 0), mai=c(0, 0, .5, 0));
for (i in 1:length(norm)) boxplot(data.frame(log2(norm[[i]][ind, ]+1)), outline=FALSE, boxwex =1, staplewex=0, outwex=0,
axes=FALSE, col=col, lwd=.5, main=names(norm)[i], cex.main=1.5);
title(ylab='Log2(read_count + 1)', cex.lab=2, outer=TRUE, line=1);
dff <- apply(cv, 2, function(x) x - cv[, 1]);
par(mar=c(8,5,2,2));
boxplot(data.frame(dff), outline=FALSE, las=3, ylab='Change of coefficient of variation', cex.lab=1.5,
col='lightblue', outwex=0, lwd=0.5);
abline(h=0, col=3, lty=3);
points(1:ncol(dff), colMeans(dff), pch=8, col=2, cex=0.5);
saveRDS(norm, paste(path.r, 'normalized.rds', sep='/'));
saveRDS(cv, paste(path.r, 'Coeff_of_Var.rds', sep='/'));
fn <- CreateDatatable(cbind(anno[rownames(cv), ], cv), paste(path.tbl, 'Coeff_of_Var.html', sep='/'));
c <- t(apply(dff, 2, function(x) c(length(x[x<0]), length(x[x>0]))));
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), Corr2Original=cor(cv, cv)[, 1],
Num_Decrease=c[, 1], Num_Increase=c[, 2], "Decrease_vs_Increase" = c[, 1]/c[, 2]);
dim(cv)
Corr2Original
tbl
par(mfrow=c(1,1))
par(mar=c(5,5,2,2))
plot(cv[, 1], cv[, 12])
dim(dff)
dff[1:2, ]
tbl
corr <- cor(cv, cv[, 1]);
corr
corr <- cor(cv, cv[, 1])[, 1];
corr
cv.m <- colMeans(cv)
cv.m
100*(1-cv.m/cv.m[1])
chg <- 100*(1-cv.m/cv.m[1]);
chg
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = c[, 1]/c[, 2]);
kable(FormatNumeric(tbl), row.names=FALSE)
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = c[, 1]/c[, 2]);
colnames(tbl)[2] <- 'Change(%)';
colnames(tbl)[6] <- 'Decrease/Increase';
kable(FormatNumeric(tbl), row.names=FALSE)
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = c[, 1]/c[, 2], stringsAsFactors = FALSE);
colnames(tbl)[2] <- 'Change(%)';
colnames(tbl)[6] <- 'Decrease/Increase';
tbl
colnames(tbl)[2] <- 'Change(%)';
tbl
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = c[, 1]/c[, 2], stringsAsFactors = FALSE);
colnames(tbl)[3] <- 'Change(%)';
colnames(tbl)[7] <- 'Decrease/Increase';
kable(FormatNumeric(tbl), row.names=FALSE)
corr
c <- t(apply(dff, 2, function(x) c(length(x[x<0]), length(x[x>0]))));
corr <- round(cor(cv, cv[, 1])[, 1], 4);
cv.m <- colMeans(cv);
chg <- round(100*(1-cv.m/cv.m[1]), 4);
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = c[, 1]/c[, 2], stringsAsFactors = FALSE);
colnames(tbl)[3] <- 'Change(%)';
colnames(tbl)[7] <- 'Decrease/Increase';
tbl
kable(FormatNumeric(tbl), row.names=FALSE)
tbl[, 3]
tbl[, 4]
tbl[, 3]
tbl[, 4]
args(kable)
?kable
kable(FormatNumeric(tbl), row.names=FALSE, digit=4)
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = round(c[, 1]/c[, 2], 2), stringsAsFactors = FALSE);
colnames(tbl)[3] <- 'Change(%)';
kable(FormatNumeric(tbl), row.names=FALSE)
colMeans(cv)
table(cv[, 11] < cv[, 1])
plot(cv[, 1], cv[, 11])
abline(0, 1)
abline(0, 1, col=2)
hist(cv[, 11]-cv[, 1])
x <- cv[, 11] -cv[, 1]
hist(x, br=100)
y <- rev(sort(x))
head()
head(y)
dim(ct)
ct[names(y)[1:4], ]
x <- ct[cv[, 1]==0, ]
dim(x)
colSums(x)
x[x[,2]==1, ]
rownames(x)[x[,1]==1]
rownames(x)[x[,2]==1]
ct['RNU4ATAC', ]
cv['RNU4ATAC', ]
sd(ct['RNU4ATAC', ])
dim(ct)
dim(cv)
length(ind)
norm <- NormalizeRNAseq(ct, gn.len);
mns <- sapply(norm, function(x) rowMeans(x, na.rm=TRUE));
ind <- which(rowSums(ct)>0);
grps <- split(rownames(smpl), smpl[, 1]);
grps <- grps[sapply(grps, length) > 1];
c <- sum(sapply(grps, function(x) sum(1:(length(x)-1))));
if (c < 6) grps <- list(group=rownames(smpl));
calcCv <- function(d, grps) {
v <- sapply(grps, function(g)
length(g[-1])*apply(d[, g, drop=FALSE], 1, function(x) var(x, na.rm=TRUE)));
v <- rowSums(v)/(length(unlist(grps))-length(grps));
sqrt(v)/rowMeans(d, na.rm=TRUE);
}
calcCorr <- function(d, grps) {
corr <- lapply(grps, function(g) as.vector(as.dist(cor(d[, g, drop=FALSE]))));
as.vector(unlist(corr));
}
cv <- sapply(norm, function(x) calcCv(x[ind, , drop=FALSE], grps));
cv[is.na(cv)] <- 0;
corr <- sapply(norm, function(x) calcCorr(x[ind, , drop=FALSE], grps));
par(mfrow=c(1, 2), mar=c(5,5,2,2));
ids <- rownames(mns)[mns[,1]>1];
x <- log10(mns[ids, 1]/(gn.len[ids]/1000));
dens <- density(x);
dens.y <- dens$y;
while (dens.y[length(dens.y)] < 10^-3) dens.y <- dens.y[-length(dens.y)];
plot(dens, xlab='Read count per kilobase', ylab='Frequency of genes',
xlim=c(min(dens$x[1:length(dens.y)]), max(dens$x[1:length(dens.y)])),
main='', xaxt='n', cex.lab=1.5, lwd=2, col='darkblue');
axis(1, at=0:ceiling(max(log10(mns[, 1]))), label=10^(0:ceiling(max(log10(mns[, 1])))));
abline(v = dens$x[dens.y==max(dens.y)], lty=3, col=3);
plot(x, cv[ids, 1], pch=19, cex=.5, xaxt='n', cex.lab=1.5, col='#88888888',
xlim=c(min(dens$x[1:length(dens.y)]), max(dens$x[1:length(dens.y)])),
xlab='Read count per kilobase', ylab='Coefficient of variation');
axis(1, at=0:ceiling(max(log10(mns[, 1]))), label=10^(0:ceiling(max(log10(mns[, 1])))));
lines(lowess(cv[ids, 1]~x), col=4);
abline(v = dens$x[dens.y==max(dens.y)], lty=3, col=3);
dim(cv)
dff <- apply(cv, 2, function(x) x - cv[, 1]);
par(mar=c(8,5,2,2));
boxplot(data.frame(dff), outline=FALSE, las=3, ylab='Change of coefficient of variation', cex.lab=1.5,
col='lightblue', outwex=0, lwd=0.5);
abline(h=0, col=3, lty=3);
points(1:ncol(dff), colMeans(dff), pch=8, col=2, cex=0.5);
saveRDS(norm, paste(path.r, 'normalized.rds', sep='/'));
saveRDS(cv, paste(path.r, 'Coeff_of_Var.rds', sep='/'));
fn <- CreateDatatable(cbind(anno[rownames(cv), ], cv), paste(path.tbl, 'Coeff_of_Var.html', sep='/'));
c <- t(apply(dff, 2, function(x) c(length(x[x<0]), length(x[x>0]))));
corr <- round(cor(cv, cv[, 1])[, 1], 4);
cv.m <- colMeans(cv);
chg <- round(100*(cv.m/cv.m[1]-1), 4);
tbl <- data.frame(Method=colnames(cv), Mean=colMeans(cv), "Change(%)"=chg,
Corr2Original=corr, Num_Decrease=c[, 1], Num_Increase=c[, 2],
"Decrease/Increase" = round(c[, 1]/c[, 2], 2), stringsAsFactors = FALSE);
colnames(tbl)[3] <- 'Change(%)';
colnames(tbl)[7] <- 'Decrease/Increase';
kable(FormatNumeric(tbl), row.names=FALSE)
plot(cv[, 1], cv[, 9])
CreateReport('rnaseq_sample.yaml')
CreateReport('rnaseq_sample.yaml')
CreateReport('rnaseq_sample.yaml')
